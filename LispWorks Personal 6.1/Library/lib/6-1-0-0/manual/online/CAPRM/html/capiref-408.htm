<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="capiref.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 simple-pane
</TITLE>

<LINK REL="next" HREF="capiref-409.htm" TYPE="text/html">
<LINK REL="prev" HREF="capiref-407.htm" TYPE="text/html">
<LINK REL="up" HREF="capiref-4.htm" TYPE="text/html">
<LINK REL="top" HREF="capiref.htm" TYPE="text/html">
<LINK REL="contents" HREF="capiref-2.htm" TYPE="text/html">
<LINK REL="index" HREF="capiref-693.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="capiref.htm">CAPI Reference Manual</A> &gt; <A HREF="capiref-4.htm">1 CAPI Reference Entries</A><BR><BR>
</DIV><A HREF="capiref-409.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-407.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-1628905"></A><A NAME="40919"></A>simple<A NAME="marker-4230493"></A>-pane</H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-1628906"></A>Class</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628908"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-1628909"></A>The class <CODE CLASS="Code">
simple-pane</CODE>
 is the superclass for any elements that actually appear as a native window, and is itself an empty window. </P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-4230472"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-4230473"></A>capi</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628910"></A>Superclasses</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1628914"></A><A HREF="capiref-126.htm#29333" CLASS="XRef">element</A></P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628915"></A>Subclasses</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1628919"></A><A HREF="capiref-81.htm#33757" CLASS="XRef">display-pane</A><BR>
<A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A><BR>
<A HREF="capiref-447.htm#33746" CLASS="XRef">title-pane</A><BR>
<A HREF="capiref-23.htm#40715" CLASS="XRef">button-panel</A><BR>
<A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A><BR>
<A HREF="capiref-274.htm#24685" CLASS="XRef">option-pane</A><BR>
<A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A><BR>
<A HREF="capiref-316.htm#28118" CLASS="XRef">progress-bar</A><BR>
<A HREF="capiref-415.htm#40091" CLASS="XRef">slider</A><BR>
<A HREF="capiref-430.htm#26824" CLASS="XRef">text-input-pane</A><BR>
<A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A><BR>
<A HREF="capiref-451.htm#36254" CLASS="XRef">toolbar</A><BR>
<A HREF="capiref-211.htm#12861" CLASS="XRef">layout</A><BR>
<A HREF="capiref-22.htm#19366" CLASS="XRef">button</A></P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628959"></A>Initargs</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-3250587"></A><CODE CLASS="Code">
:enabled</P>
<P CLASS="RDescription-C"></CODE>
<A NAME="marker-3250586"></A>A boolean controlling whether the pane is enabled.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628961"></A><CODE CLASS="Code">
:background</CODE>
<A NAME="marker-1628960"></A></P>
<P CLASS="RDescription-C">The background color of the pane.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628963"></A><CODE CLASS="Code">
:foreground</CODE>
<A NAME="marker-1628962"></A></P>
<P CLASS="RDescription-C">The foreground color of the pane.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628965"></A><CODE CLASS="Code">
:font</CODE>
<A NAME="marker-1628964"></A></P>
<P CLASS="RDescription-C">The default font for the pane.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628967"></A><CODE CLASS="Code">
:horizontal-scroll</CODE>
<A NAME="marker-1628966"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-1628968"></A><CODE CLASS="Code">
t</CODE>
, <CODE CLASS="Code">
:without-bar</CODE>
, or <CODE CLASS="Code">
nil</CODE>
. If true the pane can scroll horizontally.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628970"></A><CODE CLASS="Code">
:vertical-scroll</CODE>
<A NAME="marker-1628969"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-1628971"></A><CODE CLASS="Code">
t</CODE>
, <CODE CLASS="Code">
:without-bar</CODE>
, or <CODE CLASS="Code">
nil</CODE>
. If true the pane can scroll vertically.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628973"></A><CODE CLASS="Code">
:visible-border</CODE>
<A NAME="marker-1628972"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-1628974"></A>A boolean or a keyword controlling whether the pane has a border, for some pane classes.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-5701559"></A><CODE CLASS="Code">
:internal-border</CODE>
<A NAME="marker-5701558"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-5701560"></A>A non-negative integer, or <CODE CLASS="Code">
nil</CODE>
. Controls the width of the internal border.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-3251720"></A><CODE CLASS="Code">
:cursor</P>
<P CLASS="RDescription-C"></CODE>
<A NAME="marker-3251719"></A>A keyword naming a built-in cursor, or a cursor object, or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-3931907"></A><CODE CLASS="Code">
:pane-menu</P>
<P CLASS="RDescription-C"></CODE>
<A NAME="marker-3931906"></A>Specifies a menu to be raised by the <CODE CLASS="Code">
:post-menu</CODE>
 gesture.</P>
<P CLASS="RDescription">
<A NAME="pgfId-7390466"></A><CODE CLASS="Code">
:drop-callback</CODE>
<A NAME="marker-7630745"></A><A NAME="marker-7390465"></A><A NAME="marker-10195903"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10195876"></A>Specifies a drop callback for <A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A>, <A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A>, <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A> or <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A>.</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10195888"></A>Note that this is now supported for <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A> and <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A> on Cocoa and GTK+.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8485159"></A><CODE CLASS="Code">
:drag-callback</CODE>
<A NAME="marker-8485157"></A><A NAME="marker-8485158"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8485163"></A>Specifies a drag callback for <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A> or <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A>.</P>
<P CLASS="RDescription">
<A NAME="pgfId-9938406"></A><CODE CLASS="Code">
:automatic-resize</CODE>
<A NAME="marker-9938404"></A><A NAME="marker-9938405"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-9938407"></A>A plist.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8646076"></A><CODE CLASS="Code">
:scroll-if-not-visible-p</CODE>
<A NAME="marker-8646074"></A><A NAME="marker-8646075"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8646080"></A>Defines whether, when the focus is given to the pane and the pane is not fully visible, the pane's parent is automatically scrolled to show it.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-8899866"></A><CODE CLASS="Code">
:toolbar-title</CODE>
<A NAME="marker-8899905"></A></P>
<P CLASS="RDescription-C">A string.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-3251200"></A>Accessors</H5>
<P CLASS="RSignature">
<A NAME="pgfId-7390617"></A><A NAME="marker-3834956"></A>simple-pane-enabled<BR>
<A NAME="marker-3834946"></A>simple-pane-background<BR>
<A NAME="marker-3834966"></A>simple-pane-foreground<BR>
<A NAME="marker-3834961"></A>simple-pane-font<BR>
<A NAME="marker-3834951"></A>simple-pane-cursor<BR>
<A NAME="marker-3834986"></A>simple-pane-scroll-callback<BR>
<A NAME="marker-7390616"></A>simple-pane-drop-callback<BR>
<A NAME="marker-8485174"></A>simple-pane-drag-callback</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628977"></A>Readers</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1628978"></A><A NAME="marker-3834971"></A>simple-pane-horizontal-scroll<BR>
<A NAME="marker-3834976"></A>simple-pane-vertical-scroll<BR>
<A NAME="marker-3834981"></A>simple-pane-visible-border</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628979"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-3251395"></A><EM CLASS="Variable">
enabled</EM>
 determines whether the pane is enabled. The default value is <CODE CLASS="Code">
t</CODE>
. Note that changing the enabled state of a visible pane changes its appearance.</P>
<P CLASS="RBody">
<A NAME="pgfId-3251611"></A><EM CLASS="Variable">
background</EM>
 and <EM CLASS="Variable">
foreground</EM>
 are colors specified using the Graphics Ports color system. Additionally on Cocoa, the special value <CODE CLASS="Code">
:transparent</CODE>
 is supported, which makes the pane's background match that of its parent.</P>
<P CLASS="RBody">
<A NAME="pgfId-10636806"></A><EM CLASS="Variable">
font</EM>
 should be a <A HREF="capiref-545.htm#46756" CLASS="XRef">font</A>, a <A HREF="capiref-546.htm#83691" CLASS="XRef">font-description</A>, or <CODE CLASS="Code">
nil</CODE>
. If it is not a <A HREF="capiref-545.htm#46756" CLASS="XRef">font</A>, it is converted to a <A HREF="capiref-545.htm#46756" CLASS="XRef">font</A> when the pane is created. <CODE CLASS="Code">
nil</CODE>
 is converted to the default font, and a <A HREF="capiref-546.htm#83691" CLASS="XRef">font-description</A> is converted as if by calling <A HREF="capiref-543.htm#37094" CLASS="XRef">find-best-font</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-1628980"></A>The value for <EM CLASS="Variable">
visible-border</EM>
 can be any of the following, with the stated meanings where applicable:</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628981"></A><CODE CLASS="Code">
nil</CODE>
</P>
<P CLASS="RDescription-C">Has no border.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628982"></A><CODE CLASS="Code">
t</CODE>
</P>
<P CLASS="RDescription-C">Has a border.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1628983"></A><CODE CLASS="Code">
:default</CODE>
</P>
<P CLASS="RDescription-C">Use the default for the window type.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-6388153"></A><CODE CLASS="Code">
:outline</CODE>
</P>
<P CLASS="RDescription-C">Add an outline border.</P>
<P CLASS="RBody">
<A NAME="pgfId-6389014"></A>There are various platform/pane class combinations which do not respond to all values of <EM CLASS="Variable">
visible-border</EM>
. For instance, on Windows XP with the default theme, <CODE CLASS="Code">
text-input-choice</CODE>
 and <CODE CLASS="Code">
option-pane</CODE>
 always have a visible border regardless of the value of <EM CLASS="Variable">
visible-border</EM>
, while other classes including <CODE CLASS="Code">
display-pane</CODE>
, <CODE CLASS="Code">
text-input-pane</CODE>
, <CODE CLASS="Code">
list-panel</CODE>
, <CODE CLASS="Code">
editor-pane</CODE>
 and <CODE CLASS="Code">
graph-pane</CODE>
 have three distinct border styles, with <EM CLASS="Variable">
visible-border</EM>
 <CODE CLASS="Code">
:default</CODE>
 meaning the same as <EM CLASS="Variable">
visible-border</EM>
 <CODE CLASS="Code">
t</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-5702420"></A>If <EM CLASS="Variable">
internal-border</EM>
 is non-nil, it should be a non-negative integer specifying the width of an empty region around the edge of the pane.</P>
<P CLASS="RBody">
<A NAME="pgfId-1628984"></A>Any simple pane can be made scrollable by specifying <CODE CLASS="Code">
t</CODE>
 to <CODE CLASS="Code">
:horizontal-scroll</CODE>
 or <CODE CLASS="Code">
:vertical-scroll</CODE>
. By default these values are <CODE CLASS="Code">
nil</CODE>
, but some subclasses of <CODE CLASS="Code">
simple-pane</CODE>
 default them to <CODE CLASS="Code">
t</CODE>
 where appropriate (for instance <CODE CLASS="Code">
<A HREF="capiref-115.htm#14465" CLASS="XRef">editor-pane</A></CODE>
s always default to having a vertical scroll-bar). </P>
<P CLASS="RBody">
<A NAME="pgfId-5672643"></A>For a pane which is scrollable but does not display a scroll bar, pass the value <CODE CLASS="Code">
:without-bar</CODE>
 for <CODE CLASS="Code">
:horizontal-scroll</CODE>
 or <CODE CLASS="Code">
:vertical-scroll</CODE>
. See the example in <CODE CLASS="Code">
output-panes/scrolling-without-bar.lisp</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-5672492"></A>The height and width of a scrollable simple pane can be specified by the initargs <CODE CLASS="Code">
:scroll-height</CODE>
 and <CODE CLASS="Code">
:scroll-width</CODE>
, which have the same meaning as <CODE CLASS="Code">
:internal-min-height</CODE>
 and <CODE CLASS="Code">
:internal-min-width</CODE>
. See the <I CLASS="Italic">
CAPI User Guide</I>
 for more information about height and width initargs.</P>
<P CLASS="RBody">
<A NAME="pgfId-3254413"></A><EM CLASS="Variable">
cursor</EM>
 specifies a cursor for the pane. <CODE CLASS="Code">
nil</CODE>
 means use the default cursor, and this is the default value. <EM CLASS="Variable">
cursor</EM>
 can also be a cursor object as returned by <A HREF="capiref-223.htm#28057" CLASS="XRef">load-cursor</A>. The other allowed values are keywords naming built-in cursors which  are supported on each platform as shown in the table below.</P>
<P CLASS="RBody">
<A NAME="pgfId-5673524"></A>&nbsp;</P>
<TABLE BORDER="1">
<CAPTION>
<H6 CLASS="Table">
<A NAME="pgfId-5673539"></A><DIV>
<IMG SRC="capiref-4.gif">
</DIV>
&nbsp;</H6>
</CAPTION>
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body-Center">
<A NAME="pgfId-5674556"></A><EM CLASS="Variable">
cursor</EM>
</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body-Center">
<A NAME="pgfId-5674558"></A>Cocoa</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body-Center">
<A NAME="pgfId-5673527"></A>Windows</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body-Center">
<A NAME="pgfId-5673529"></A>Motif</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674560"></A><CODE CLASS="Code">
:busy</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674562"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673570"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673572"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674564"></A><CODE CLASS="Code">
:i-beam</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674566"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673574"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673576"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674568"></A><CODE CLASS="Code">
:top-left-arrow</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674570"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673578"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673580"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674572"></A><CODE CLASS="Code">
:h-double-arrow</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674574"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673582"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673584"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674576"></A><CODE CLASS="Code">
:v-double-arrow</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674578"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673586"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673588"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674580"></A><CODE CLASS="Code">
:left-side</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674582"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673590"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673592"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674584"></A><CODE CLASS="Code">
:right-side</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674586"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673594"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673596"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674588"></A><CODE CLASS="Code">
:top-side</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674590"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673598"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673600"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674592"></A><CODE CLASS="Code">
:bottom-side</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674594"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673602"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673604"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674596"></A><CODE CLASS="Code">
:wait</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674598"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673606"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673608"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674600"></A><CODE CLASS="Code">
:crosshair</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674602"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673610"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673612"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674604"></A><CODE CLASS="Code">
:gc-notification</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674606"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673614"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673616"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674608"></A><CODE CLASS="Code">
:top-left-corner</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674610"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673618"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673620"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674612"></A><CODE CLASS="Code">
:top-right-corner</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674614"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673622"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673624"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674616"></A><CODE CLASS="Code">
:bottom-left-corner</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674618"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673626"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673628"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674620"></A><CODE CLASS="Code">
:bottom-right-corner</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674622"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673630"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673632"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674624"></A><CODE CLASS="Code">
:hand</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674626"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673634"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673636"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674628"></A><CODE CLASS="Code">
:fleur</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674630"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673531"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673533"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674632"></A><CODE CLASS="Code">
:move</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674634"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673535"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5673537"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674767"></A><CODE CLASS="Code">
:closed-hand</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674769"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674771"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674773"></A>No</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674759"></A><CODE CLASS="Code">
:open-hand</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674761"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674763"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674765"></A>No</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674799"></A><CODE CLASS="Code">
:disappearing-item</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674801"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674803"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-5674805"></A>No</P>
</TD>
</TR>
</TABLE>
<P CLASS="RBody">
<A NAME="pgfId-3933032"></A><EM CLASS="Variable">
pane-menu</EM>
 can be used to specify or create a menu to be displayed when the <CODE CLASS="Code">
:post-menu</CODE>
 gesture is received by the pane. It has the default value <CODE CLASS="Code">
:default</CODE>
 which means that <A HREF="capiref-234.htm#51961" CLASS="XRef">make-pane-popup-menu</A> is called to create the menu. For a full description of <EM CLASS="Variable">
pane-menu</EM>
, see the section &quot;Popup menus for panes&quot; in the <I CLASS="Italic">
CAPI User Guide</I>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-7390644"></A><EM CLASS="Variable">
drop-callback</EM>
 can be specified for a pane that is an instance of <A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A>, <A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A>, <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A>, <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A> or a subclass of one of these. When the user drags an object over a window, the CAPI first tries to call the <EM CLASS="Variable">
drop-callback</EM>
 of any pane under the mouse and otherwise calls the <EM CLASS="Variable">
drop-callback</EM>
 of the top-level interface. The default value of <EM CLASS="Variable">
drop-callback</EM>
 is <CODE CLASS="Code">
nil</CODE>
, which means that there is no support for dropping into the pane.</P>
<P CLASS="RBody">
<A NAME="pgfId-7390646"></A>For <A HREF="capiref-115.htm#14465" CLASS="XRef">editor-pane</A>, <EM CLASS="Variable">
drop-callback</EM>
 can be <CODE CLASS="Code">
:default</CODE>
, which provides support for dropping a string into the pane and inserting the string into the pane's editor buffer.</P>
<P CLASS="RBody">
<A NAME="pgfId-10195912"></A>If <EM CLASS="Variable">
drop-callback</EM>
 is any other non-nil value, it should be either a list (for simple cases) or function designator (to use all options). When it is a function designator, it needs to have this signature:</P>
<P CLASS="RSignature">
<A NAME="pgfId-7390648"></A>drop-callback <EM CLASS="Variable">
pane</EM>
 <EM CLASS="Variable">
drop-object</EM>
 <EM CLASS="Variable">
stage</EM>
</P>
<P CLASS="RBody">
<A NAME="pgfId-7390649"></A>The function <EM CLASS="Variable">
drop-callback</EM>
 is called by the CAPI at various times such as when the pane is displayed and when the user attempts to drop data into the pane. <EM CLASS="Variable">
pane</EM>
 is the pane itself, <EM CLASS="Variable">
drop-object</EM>
 is an object used to communicate information about the current dropping operation (see below) and <EM CLASS="Variable">
stage</EM>
 is a keyword. <EM CLASS="Variable">
drop-callback</EM>
 should handle these values of <EM CLASS="Variable">
stage</EM>
:</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-7390650"></A><CODE CLASS="Code">
:formats</CODE>
</P>
<P CLASS="RDescription-C">This might occur when the pane is being displayed or might occur each time the user drags or drops an object over the pane. It should call <A HREF="capiref-386.htm#28147" CLASS="XRef">set-drop-object-supported-formats</A> with the <EM CLASS="Variable">
drop-object</EM>
 and a list of formats that the pane wants to receive. Each format is a keyword. The list of the formats must be the same each time it is called.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-7390652"></A><CODE CLASS="Code">
:enter</CODE>
</P>
<P CLASS="RDescription-C">This occurs when the user drags an object over the pane which is an <A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A> or <A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A> (not <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A> or <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A>). It can query the <EM CLASS="Variable">
drop-object</EM>
 using <A HREF="capiref-108.htm#35546" CLASS="XRef">drop-object-provides-format</A> and <A HREF="capiref-102.htm#49084" CLASS="XRef">drop-object-allows-drop-effect-p</A> to discover what the user is dragging. It can also use <A HREF="capiref-107.htm#88925" CLASS="XRef">drop-object-pane-x</A> and <A HREF="capiref-107.htm#42873" CLASS="XRef">drop-object-pane-y</A> to query the mouse position relative to the pane. It should call <CODE CLASS="Code">
(setf <A HREF="capiref-105.htm#50122" CLASS="XRef">drop-object-drop-effect</A>)</CODE>
 with an effect if it wants to allow the object to be dropped. If this is not called, then the object cannot be dropped into the pane.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-7390654"></A><CODE CLASS="Code">
:drag</CODE>
</P>
<P CLASS="RDescription-C">This occurs while the user is dragging an object over the pane. It can query the <EM CLASS="Variable">
drop-object</EM>
 using <A HREF="capiref-108.htm#35546" CLASS="XRef">drop-object-provides-format</A> and <A HREF="capiref-102.htm#49084" CLASS="XRef">drop-object-allows-drop-effect-p</A> to discover what the user is dragging. For <A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A>, it can use <A HREF="capiref-107.htm#88925" CLASS="XRef">drop-object-pane-x</A> and <A HREF="capiref-107.htm#42873" CLASS="XRef">drop-object-pane-y</A> to query the mouse position relative to the pane. For <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A> and <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A>, it can use <A HREF="capiref-103.htm#37294" CLASS="XRef">drop-object-collection-index</A> or <A HREF="capiref-104.htm#60973" CLASS="XRef">drop-object-collection-item</A> to query where the user is attempting to drop the object and can call their setf functions to adjust this position. It should call <CODE CLASS="Code">
(setf <A HREF="capiref-105.htm#50122" CLASS="XRef">drop-object-drop-effect</A>)</CODE>
 with an effect if it wants to allow the object to be dropped. If this is not called, then the object cannot be dropped into the pane. For <A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A> and <A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A>, it might also want to update the pane to indicate where the object will be dropped.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10214077"></A><CODE CLASS="Code">
:drop</CODE>
</P>
<P CLASS="RDescription-C">This occurs when the user drops an object over the pane. It can query the <EM CLASS="Variable">
drop-object</EM>
 as for the <CODE CLASS="Code">
:drag</CODE>
 stage, but can also obtain the object itself using <A HREF="capiref-106.htm#55927" CLASS="XRef">drop-object-get-object</A> for one of the formats in the list returned by <A HREF="capiref-108.htm#35546" CLASS="XRef">drop-object-provides-format</A>. Once the object is received, it should call <CODE CLASS="Code">
(setf <A HREF="capiref-105.htm#50122" CLASS="XRef">drop-object-drop-effect</A>)</CODE>
 with the effect that has been used by the callback. It should also update the pane to incorporate the object in whatever way the application requires.</P>
<P CLASS="RBody">
<A NAME="pgfId-10216331"></A>When <EM CLASS="Variable">
drop-callback</EM>
 is a list, it specifies a simple response. The list should be of the form:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-10218470"></A>(<EM CLASS="Variable">
effects</EM>
 <EM CLASS="Variable">
formats</EM>
 <EM CLASS="Variable">
drop-stage-callback</EM>
 &amp;optional <EM CLASS="Variable">
checker</EM>
)</CODE>
<P CLASS="RBody">
<A NAME="pgfId-10224525"></A>Both  <EM CLASS="Variable">
effects</EM>
 and <EM CLASS="Variable">
formats</EM>
 can be either a list of effects or formats, or an atom which is interpreted as a list of one element. <EM CLASS="Variable">
effects</EM>
 and <EM CLASS="Variable">
formats</EM>
 specify which effects and formats are allowed.</P>
<P CLASS="RBody">
<A NAME="pgfId-10224526"></A>For the stages except <CODE CLASS="Code">
:formats</CODE>
, the first effect of the given effects that the <EM CLASS="Variable">
drop-object</EM>
 allows is set (by calling <CODE CLASS="Code">
(setf drop-object-drop-effect)</CODE>
), except when <EM CLASS="Variable">
checker</EM>
 is supplied. In the latter case, before setting an effect it loops through the formats and calls the checker with three arguments:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-10224527"></A>funcall <EM CLASS="Variable">
checker</EM>
 <EM CLASS="Variable">
pane</EM>
 <EM CLASS="Variable">
effect</EM>
 <EM CLASS="Variable">
format</EM>
</CODE>
<P CLASS="RBody">
<A NAME="pgfId-10224528"></A>If <EM CLASS="Variable">
checker</EM>
 returns non-nil it sets the effect. If <EM CLASS="Variable">
checker</EM>
 returns <CODE CLASS="Code">
nil</CODE>
 for the formats, it goes to the next effect.</P>
<P CLASS="RBody">
<A NAME="pgfId-10224529"></A>In the <CODE CLASS="Code">
:drop</CODE>
 stage, after setting the effect, it gets the object with first format that is provided by the <EM CLASS="Variable">
drop-object</EM>
, and then calls the <EM CLASS="Variable">
drop-stage-callback</EM>
 with four arguments:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-10224530"></A>funcall <EM CLASS="Variable">
drop-stage-callback</EM>
 <EM CLASS="Variable">
pane</EM>
 <EM CLASS="Variable">
object</EM>
 <EM CLASS="Variable">
x-or-index</EM>
 <EM CLASS="Variable">
y-or-placement</EM>
</CODE>
<P CLASS="RBody">
<A NAME="pgfId-10224522"></A>If the pane is a <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A> or <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A>, the last two arguments are the item index (for <A HREF="capiref-151.htm#35080" CLASS="XRef">get-collection-item</A>) and placement (<CODE CLASS="Code">
:above</CODE>
, <CODE CLASS="Code">
:item</CODE>
, <CODE CLASS="Code">
:below</CODE>
), which are the results of <A HREF="capiref-103.htm#37294" CLASS="XRef">drop-object-collection-index</A>. Otherwise, the last two arguments are the <EM CLASS="Variable">
x</EM>
 and <EM CLASS="Variable">
y</EM>
 (results of <A HREF="capiref-107.htm#88925" CLASS="XRef">drop-object-pane-x</A> and <A HREF="capiref-107.htm#42873" CLASS="XRef">drop-object-pane-y</A>). It is the responsibility of the <EM CLASS="Variable">
drop-stage-callback</EM>
 to perform whatever dropping should mean.</P>
<P CLASS="RBody">
<A NAME="pgfId-10230207"></A><EM CLASS="Variable">
drag-callback</EM>
 can be specified for a pane that is an instance of <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A> or <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A>. The default value of <EM CLASS="Variable">
drag-callback</EM>
 is <CODE CLASS="Code">
nil</CODE>
, which means that there is no support for dragging from the pane. Otherwise, it should be a function designator with this signature:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-10232064"></A>drag-callback <EM CLASS="Variable">
pane</EM>
 <EM CLASS="Variable">
info</EM>
 =&gt; <EM CLASS="Variable">
result</EM>
</CODE>
<P CLASS="RBody">
<A NAME="pgfId-10232065"></A>When the user drags items in the pane, the CAPI calls the <EM CLASS="Variable">
drag-callback</EM>
. <EM CLASS="Variable">
pane</EM>
 is the pane itself and <EM CLASS="Variable">
info</EM>
 is a list of item indices that are being dragged (compare with <CODE CLASS="Code">
choice-selection</CODE>
).</P>
<P CLASS="RBody">
<A NAME="pgfId-10232068"></A>The <EM CLASS="Variable">
drag-callback</EM>
 should normally return a plist <EM CLASS="Variable">
result</EM>
 whose keys are the data formats to be dragged, with a value associated with each format. Formats are arbitrary keywords that must be interpreted by the pane where you intend to drop the values (see the <EM CLASS="Variable">
drop-callback</EM>
). The <CODE CLASS="Code">
:string</CODE>
 format is understood by some other panes that expect text.</P>
<P CLASS="RBody">
<A NAME="pgfId-10232074"></A>The plist <EM CLASS="Variable">
result</EM>
 returned by <EM CLASS="Variable">
drag-callback</EM>
 can contain the key <CODE CLASS="Code">
:image-function</CODE>
 with a function <EM CLASS="Variable">
image-function</EM>
 as value.</P>
<P CLASS="RBody">
<A NAME="pgfId-10232076"></A>This function is used to generate the image that is used in the dragging itself, exactly as the <EM CLASS="Variable">
image-function</EM>
 in <A HREF="capiref-95.htm#29125" CLASS="XRef">drag-pane-object</A> is used. On Cocoa, <A HREF="capiref-462.htm#81588" CLASS="XRef">tree-view</A> and <A HREF="capiref-214.htm#30299" CLASS="XRef">list-panel</A> ignore this key in <EM CLASS="Variable">
result</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-10232080"></A><EM CLASS="Variable">
drag-callback</EM>
 can also be used in top-level interfaces. In this case the second argument <EM CLASS="Variable">
info</EM>
 is a flag describing the gesture that caused the call. Currently the only value is <CODE CLASS="Code">
:drag-image</CODE>
, which means it was invoked by dragging the <EM CLASS="Variable">
drag-image</EM>
 (see <A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A>).</P>
<P CLASS="RBody">
<A NAME="pgfId-9281688"></A><EM CLASS="Variable">
drag-callback</EM>
 is allowed to return the <EM CLASS="Variable">
result</EM>
 <CODE CLASS="Code">
:default</CODE>
 rather than a plist. <CODE CLASS="Code">
:default</CODE>
 tells the system to do default dragging if there is any. At the time of writing the only place where there is default dragging is on Cocoa for an interface with an <CODE CLASS="Code">
:interface-pathname</CODE>
. <EM CLASS="Variable">
drag-callback</EM>
 is allowed to return the <EM CLASS="Variable">
result</EM>
<CODE CLASS="Code">
 nil</CODE>
, meaning do not do dragging.</P>
<P CLASS="RBody">
<A NAME="pgfId-10572076"></A>On <A HREF="capiref-275.htm#35026" CLASS="XRef">output-pane</A> you add dragging by adding an entry to the <EM CLASS="Variable">
input-model</EM>
 and which initiates the dragging by calling <A HREF="capiref-95.htm#29125" CLASS="XRef">drag-pane-object</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-9938434"></A><EM CLASS="Variable">
automatic-resize</EM>
 makes the pane resize automatically. This has an effect only if it is placed inside a <A HREF="capiref-421.htm#70578" CLASS="XRef">static-layout</A> (including subclasses like <A HREF="capiref-293.htm#24209" CLASS="XRef">pinboard-layout</A>). The effect is that when the <A HREF="capiref-421.htm#70578" CLASS="XRef">static-layout</A> is resized then the pane also changes its geometry.</P>
<P CLASS="RBody">
<A NAME="pgfId-9938444"></A>The value of <EM CLASS="Variable">
automatic-resize</EM>
 defines how the pane's geometry changes. It must be a plist of keywords and values which match the keywords of the function <A HREF="capiref-393.htm#98768" CLASS="XRef">set-object-automatic-resize</A> and are interpreted in the same way.</P>
<P CLASS="RBody">
<A NAME="pgfId-8646170"></A><EM CLASS="Variable">
scroll-if-not-visible-p</EM>
 controls scrolling behavior of the parent when the pane is given the input focus. <EM CLASS="Variable">
scroll-if-not-visible-p</EM>
 can be <CODE CLASS="Code">
t</CODE>
, <CODE CLASS="Code">
nil</CODE>
, or <CODE CLASS="Code">
:non-mouse</CODE>
. See <A HREF="capiref-373.htm#22996" CLASS="XRef">scroll-if-not-visible-p</A> for details. When this initarg is supplied, the generic function <CODE CLASS="Code">
(setf scroll-if-not-visible-p)</CODE>
 is called with it.</P>
<P CLASS="RBody">
<A NAME="pgfId-8899917"></A>If the pane is used in the <EM CLASS="Variable">
toolbar-items</EM>
 list of an <A HREF="capiref-184.htm#30394" CLASS="XRef">interface</A>, then <EM CLASS="Variable">
toolbar-title</EM>
 should be a short string that will be shown near to the pane if required for the toolbar.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-8925330"></A>Notes</H5>
<OL>
<LI CLASS="RStep-1">
<A NAME="pgfId-8925355"></A><EM CLASS="Variable">
foreground</EM>
 is ignored for buttons on Windows and Cocoa. </LI>
<LI CLASS="RStep">
<A NAME="pgfId-3933033"></A>In order to display a simple pane, it needs to be contained within an interface. The two convenience functions <A HREF="capiref-227.htm#10479" CLASS="XRef">make-container</A> and <A HREF="capiref-57.htm#34324" CLASS="XRef">contain</A> are provided to create an interface with enough support for that pane. The function <A HREF="capiref-227.htm#10479" CLASS="XRef">make-container</A> just returns a container for an element, and the function <A HREF="capiref-57.htm#34324" CLASS="XRef">contain</A> displays an interface created for the pane using <A HREF="capiref-227.htm#10479" CLASS="XRef">make-container</A>.</LI>
<LI CLASS="RStep">
<A NAME="pgfId-9323286"></A><CODE CLASS="Code">
</CODE>
On Cocoa in Mac OS X 10.2, the only supported <EM CLASS="Variable">
cursor</EM>
 is  <CODE CLASS="Code">
:i-beam</CODE>
.</LI>
<LI CLASS="RStep">
<A NAME="pgfId-9619606"></A>If <CODE CLASS="Code">
:image</CODE>
 is supplied in the <EM CLASS="Variable">
plist</EM>
 returned by <EM CLASS="Variable">
drag-callback</EM>
, the dragging mechanism automatically frees the <A HREF="capiref-574.htm#77313" CLASS="XRef">image</A> object as if by <A HREF="capiref-555.htm#48924" CLASS="XRef">free-image</A>  when it no longer needs it.</LI>
<LI CLASS="RStep">
<A NAME="pgfId-9938766"></A>You can also control automatic resizing of a <CODE CLASS="Code">
simple-pane</CODE>
 using <A HREF="capiref-393.htm#98768" CLASS="XRef">set-object-automatic-resize</A>.</LI>
</OL>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628989"></A>Example</H5>
<PRE CLASS="RCode-first"><A NAME="pgfId-1628990"></A>(capi:contain (make-instance 'capi:output-pane</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1628991"></A>                  :background :red</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1628992"></A>                  :scroll-width 300</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1628993"></A>                  :horizontal-scroll t))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3256113"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3255705"></A>(setf ep</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3255706"></A>      (capi:contain</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6388965"></A>       (make-instance 'capi:editor-pane</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6388966"></A>                      :visible-border t)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6388967"></A>&nbsp;</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-3255710"></A>(setf (capi:simple-pane-cursor ep) :crosshair)</PRE>
<P CLASS="RBody">
<A NAME="pgfId-8490449"></A>For an example illustrating the use of <EM CLASS="Variable">
drag-callback</EM>
, see<BR>
<CODE CLASS="Code">
examples/capi/choice/drag-and-drop.lisp</CODE>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1628996"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-1629000"></A><A HREF="capiref-57.htm#34324" CLASS="XRef">contain</A><BR>
<A HREF="capiref-393.htm#98768" CLASS="XRef">set-object-automatic-resize</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">CAPI Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="capiref-409.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-407.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
