<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="capiref.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 filtering-layout
</TITLE>

<LINK REL="next" HREF="capiref-140.htm" TYPE="text/html">
<LINK REL="prev" HREF="capiref-138.htm" TYPE="text/html">
<LINK REL="up" HREF="capiref-4.htm" TYPE="text/html">
<LINK REL="top" HREF="capiref.htm" TYPE="text/html">
<LINK REL="contents" HREF="capiref-2.htm" TYPE="text/html">
<LINK REL="index" HREF="capiref-693.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="capiref.htm">CAPI Reference Manual</A> &gt; <A HREF="capiref-4.htm">1 CAPI Reference Entries</A><BR><BR>
</DIV><A HREF="capiref-140.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-138.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-7637788"></A><A NAME="17387"></A>filtering<A NAME="marker-7659908"></A>-layout</H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-7637789"></A>Class</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637790"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-7637791"></A>A layout that can be used for filtering.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637792"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-7637793"></A>capi</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637794"></A>Superclasses</H5>
<P CLASS="RBody">
<A NAME="pgfId-7637795"></A><A HREF="capiref-362.htm#13083" CLASS="XRef">row-layout</A></P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637807"></A>Initargs</H5>
<P CLASS="RDescription">
<A NAME="pgfId-7660932"></A><CODE CLASS="Code">
:callback-object</CODE>
<A NAME="marker-7637808"></A><A NAME="marker-7665443"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-7665350"></A>The argument for the callbacks. If it is <CODE CLASS="Code">
nil</CODE>
 the top-level-interface of the layout is used.</P>
<P CLASS="RDescription">
<A NAME="pgfId-7665528"></A><CODE CLASS="Code">
:change-callback</CODE>
<A NAME="marker-7665527"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-7665529"></A>A function of one argument (the <EM CLASS="Variable">
callback-object</EM>
). It is called whenever the text in the filter changes. Also if <EM CLASS="Variable">
callback</EM>
 is not supplied, <EM CLASS="Variable">
change-callback</EM>
 is called instead.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-7665563"></A><CODE CLASS="Code">
:callback</CODE>
<A NAME="marker-7665562"></A></P>
<P CLASS="RDescription-C">A function of one argument (the <EM CLASS="Variable">
callback-object</EM>
). It is called when the user presses <CODE CLASS="Code">
Return</CODE>
, makes a selection from the menu, or clicks the <B CLASS="Button">
Confirm</B>
 button. If <EM CLASS="Variable">
callback</EM>
 is not supplied, <EM CLASS="Variable">
change-callback</EM>
 is called instead.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-7660935"></A><CODE CLASS="Code">
:text</CODE>
<A NAME="marker-7665482"></A></P>
<P CLASS="RDescription-C">A string specifying the initial text of the filter, or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-7660885"></A><CODE CLASS="Code">
:matches-title</CODE>
<A NAME="marker-7665495"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8883793"></A>A string, <CODE CLASS="Code">
t</CODE>
 or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8883740"></A><CODE CLASS="Code">
:help-string</CODE>
<A NAME="marker-8883739"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8883741"></A>A string, <CODE CLASS="Code">
t</CODE>
 or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8887823"></A><CODE CLASS="Code">
:label-style</CODE>
<A NAME="marker-8887822"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8887824"></A><CODE CLASS="Code">
:short</CODE>
, <CODE CLASS="Code">
:medium</CODE>
 or <CODE CLASS="Code">
:long</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637813"></A>Accessors</H5>
<P CLASS="RSignature">
<A NAME="pgfId-7666363"></A><A NAME="marker-7637814"></A><A NAME="marker-7668583"></A><A NAME="74501"></A>filtering-layout-state<BR>
<A NAME="marker-7668640"></A>filtering-layout-matches-text</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637817"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-7668767"></A>The main part of a filtering layout is a <A HREF="capiref-430.htm#26824" CLASS="XRef">text-input-pane</A> which allows the user to enter a string. The string is used for filtering. The user can control how it is used by a menu that allows her to specify whether:</P>
<UL>
<LI CLASS="RBullet">
<A NAME="pgfId-7668768"></A>the string is used as a regular expression or plain string</LI>
<LI CLASS="RBullet">
<A NAME="pgfId-7668769"></A>the filter excludes matches or includes matches</LI>
<LI CLASS="RBullet">
<A NAME="pgfId-7668770"></A>filtering is case-sensitive or case-insensitive</LI>
</UL>
<P CLASS="RBody">
<A NAME="pgfId-7668771"></A>The filtering layout defines the parameters to use, and calls the callbacks to perform the filtering. It does not do any filtering itself.</P>
<P CLASS="RBody">
<A NAME="pgfId-7668772"></A>To actually do the filtering, the using code needs to call <A HREF="capiref-140.htm#65859" CLASS="XRef">filtering-layout-match-object-and-exclude-p</A>, which returns as multiple values a precompiled regexp and a flag specifying whether to exclude matches. The regexp should be used to perform the filtering, typically by using <CODE CLASS="Code">
lispworks:find-regexp-in-string</CODE>
. Note that <A HREF="capiref-140.htm#65859" CLASS="XRef">filtering-layout-match-object-and-exclude-p</A> returns <CODE CLASS="Code">
nil</CODE>
 when there is no string in the <A HREF="capiref-430.htm#26824" CLASS="XRef">text-input-pane</A>, and that even when the filter is set to plain match it returns a regexp (which matches a plain string).</P>
<P CLASS="RBody">
<A NAME="pgfId-7717074"></A>You supply a <CODE CLASS="Code">
filtering-layout</CODE>
 amongst the <EM CLASS="Variable">
panes</EM>
 of your interface definition (not its <EM CLASS="Variable">
layouts</EM>
). The description of a <CODE CLASS="Code">
filtering-layout</CODE>
 is set by the <CODE CLASS="Code">
initialize-instance</CODE>
 method of the class, and therefore the description cannot be passed as an initarg and should not be manipulated.</P>
<P CLASS="RBody">
<A NAME="pgfId-7717042"></A><CODE CLASS="Code">
filtering-layout-state</CODE>
 returns a &quot;state&quot; object which can be used later to set the state of any <CODE CLASS="Code">
filtering-layout</CODE>
 by <CODE CLASS="Code">
(setf capi:filtering-layout-state)</CODE>
. When setting the state, the value can also be a string or <CODE CLASS="Code">
nil</CODE>
. A string means setting the filter string to it and making the filtering state be plain string, includes matches, and case-insensitive. <CODE CLASS="Code">
nil</CODE>
 means the same as the empty string.</P>
<P CLASS="RBody">
<A NAME="pgfId-8887879"></A><EM CLASS="Variable">
matches-title</EM>
 controls whether the <CODE CLASS="Code">
filtering-layout</CODE>
 contains a <A HREF="capiref-81.htm#33757" CLASS="XRef">display-pane</A> (the &quot;matches pane&quot;) showing the number of matches. If <EM CLASS="Variable">
matches-title</EM>
 is a string, it provides the title of the matches pane. If <EM CLASS="Variable">
matches-title</EM>
 is <CODE CLASS="Code">
t</CODE>
 the title is <B CLASS="Button">
Matches:</B>
. Note that the actual text in the matches pane must be set by the caller by <CODE CLASS="Code">
(setf capi:filtering-layout-matches-text)</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-8887953"></A>If <EM CLASS="Variable">
help-string</EM>
 is non-nil then the filter has a Help button which raises a default help text if <EM CLASS="Variable">
help-string</EM>
 is <CODE CLASS="Code">
t</CODE>
, or the text of <EM CLASS="Variable">
help-string</EM>
 if it is a string.</P>
<P CLASS="RBody">
<A NAME="pgfId-8887717"></A>If <EM CLASS="Variable">
label-style</EM>
 is <CODE CLASS="Code">
:short</CODE>
 the filter menu has a short title. For example if the filter is set for case-sensitive plain inclusive matching the short label is <B CLASS="Button">
PMC</B>
. If <EM CLASS="Variable">
label-style</EM>
 is <CODE CLASS="Code">
:medium</CODE>
 then this label would be <B CLASS="Button">
Filter:C</B>
. Any other value of <EM CLASS="Variable">
label-style</EM>
 would make a long label <B CLASS="Button">
Plain Match Cased </B>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7741398"></A>Example</H5>
<PRE CLASS="RCode-first"><A NAME="pgfId-7741418"></A>(defvar *things* (list &quot;Foo&quot; &quot;Bar&quot; &quot;Baz&quot; 'car 'cdr))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741419"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741420"></A>(capi:define-interface my-interface ()</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741421"></A>  ((things :reader my-things</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741422"></A>           :initform *things*))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741423"></A>  (:panes</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741424"></A>   (my-things-list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741425"></A>    capi:list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741426"></A>    :reader my-interface-list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741427"></A>    :items things</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741428"></A>    :visible-min-height `(:character ,(length *things*)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741429"></A>   (my-filtering</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741430"></A>    capi:filtering-layout</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741431"></A>    :change-callback 'update-my-interface</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741432"></A>    :reader my-interface-filtering))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741433"></A>  (:layouts</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741434"></A>   (a-layout</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741435"></A>    capi:column-layout</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741436"></A>    '(my-filtering my-things-list-panel)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741437"></A>  (:default-initargs :title &quot;Filtering example&quot;)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741438"></A>  )</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7741439"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822286"></A>(defun update-my-interface (my-interface)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822287"></A>  (let* ((things (my-things my-interface))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822288"></A>         (filtered-things</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822289"></A>          (multiple-value-bind (regexp excludep)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822290"></A>              (capi:filtering-layout-match-object-and-exclude-p</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822291"></A>               (my-interface-filtering my-interface)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822292"></A>               nil)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822293"></A>            (if regexp</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822294"></A>                (loop for thing in things</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822295"></A>                      when (if (find-regexp-in-string</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822296"></A>                                regexp</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822297"></A>                                (string thing))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822298"></A>                               (not excludep)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822299"></A>                             excludep)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822300"></A>                      collect thing)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822301"></A>              things))))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822302"></A>    (setf (capi:collection-items</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-7822303"></A>           (my-interface-list-panel my-interface))</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-7741410"></A>          filtered-things)))</PRE>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-7637823"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-7637768"></A><A HREF="capiref-140.htm#65859" CLASS="XRef">filtering-layout-match-object-and-exclude-p</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">CAPI Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="capiref-140.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-138.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
