<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="capiref.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 menu-item
</TITLE>

<LINK REL="next" HREF="capiref-248.htm" TYPE="text/html">
<LINK REL="prev" HREF="capiref-246.htm" TYPE="text/html">
<LINK REL="up" HREF="capiref-4.htm" TYPE="text/html">
<LINK REL="top" HREF="capiref.htm" TYPE="text/html">
<LINK REL="contents" HREF="capiref-2.htm" TYPE="text/html">
<LINK REL="index" HREF="capiref-693.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="capiref.htm">CAPI Reference Manual</A> &gt; <A HREF="capiref-4.htm">1 CAPI Reference Entries</A><BR><BR>
</DIV><A HREF="capiref-248.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-246.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-900283"></A><A NAME="29489"></A>menu<A NAME="marker-4172891"></A>-item</H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-900439"></A>Class</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-900287"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-2954595"></A>A menu item is an individual item in a menu or menu component, and instances of <CODE CLASS="Code">
menu-item</CODE>
 are created automatically by <A HREF="capiref-69.htm#25433" CLASS="XRef">define-interface</A>. </P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-4172868"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-4172869"></A>capi</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-2954596"></A>Superclasses</H5>
<P CLASS="RSignature">
<A NAME="pgfId-900294"></A><A HREF="capiref-205.htm#18686" CLASS="XRef">item</A><BR>
<A HREF="capiref-448.htm#31725" CLASS="XRef">titled-menu-object</A></P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-4774367"></A>Initargs</H5>
<P CLASS="RDescription">
<A NAME="pgfId-4774370"></A><CODE CLASS="Code">
</CODE>
<A NAME="marker-4774368"></A><A NAME="marker-4774369"></A><CODE CLASS="Code">
:accelerator</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-4774377"></A>A character, string or plist, or the keyword <CODE CLASS="Code">
:default</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-7871680"></A><CODE CLASS="Code">
:alternative</CODE>
<A NAME="marker-7871678"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-7871681"></A>A generalized boolean.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-2731915"></A><CODE CLASS="Code">
:help-key</CODE>
<A NAME="marker-2731912"></A></P>
<P CLASS="RDescription-C">An object used for lookup of help. Default value <CODE CLASS="Code">
t</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-4774346"></A><CODE CLASS="Code">
:mnemonic</CODE>
<A NAME="marker-4774345"></A></P>
<P CLASS="RDescription-C">A character, integer or symbol specifying a mnemonic for the menu item.</P>
<P CLASS="RDescription">
<A NAME="pgfId-4775211"></A><CODE CLASS="Code">
:mnemonic-escape</CODE>
<A NAME="marker-4775210"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-4775212"></A>A character specifying the mnemonic escape. The default value is <CODE CLASS="Code">
#&#92;&amp;</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-4804778"></A><CODE CLASS="Code">
:mnemonic-title</CODE>
<A NAME="marker-4804777"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-4804779"></A>A string specifying the text and a mnemonic.</P>
<P CLASS="RDescription">
<A NAME="pgfId-3755277"></A><CODE CLASS="Code">
:selected-function</CODE>
<A NAME="marker-3755275"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-3755282"></A>A setup callback determining whether the item is selected.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8566585"></A><CODE CLASS="Code">
:enabled-function-for-dialog</CODE>
<A NAME="marker-8599979"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8599887"></A><CODE CLASS="Code">
nil</CODE>
, <CODE CLASS="Code">
t</CODE>
, <CODE CLASS="Code">
:same-as-normal</CODE>
 or a function designator. Determines enabled state when a dialog is on screen. </P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-2743282"></A>Readers</H5>
<P CLASS="RBody">
<A NAME="pgfId-2743283"></A><A NAME="marker-3760137"></A><CODE CLASS="Code">
help-key</CODE>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-900297"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-900299"></A>The text displayed in the menu item is the contents of the <EM CLASS="Variable">
text</EM>
 slot, or the contents of the <EM CLASS="Variable">
title</EM>
 slot, otherwise it is the result of applying the <EM CLASS="Variable">
print-function</EM>
 to the <EM CLASS="Variable">
data</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-3755547"></A>If <EM CLASS="Variable">
selected-function</EM>
 is non-nil it should a function which is called before the <CODE CLASS="Code">
menu-item</CODE>
 is displayed and which determines whether or not the <CODE CLASS="Code">
menu-item</CODE>
 is selected. By default <EM CLASS="Variable">
selected-function</EM>
 is called on the interface of the <CODE CLASS="Code">
menu-item</CODE>
, but this argument can be changed by passing the <A HREF="capiref-248.htm#21554" CLASS="XRef">menu-object</A> initarg <EM CLASS="Variable">
setup-callback-argument</EM>
. The default value of <EM CLASS="Variable">
selected-function</EM>
 is <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-900302"></A>Callbacks are made in response to a user gesture on a <CODE CLASS="Code">
menu-item</CODE>
. The <EM CLASS="Variable">
callback-type </EM>
(see <A HREF="capiref-26.htm#13019" CLASS="XRef">callbacks</A>), <EM CLASS="Variable">
callback</EM>
 and <EM CLASS="Variable">
callback-data-function</EM>
 (see <A HREF="capiref-248.htm#21554" CLASS="XRef">menu-object</A>) are found by looking for a non-nil value, first in the <CODE CLASS="Code">
menu-item</CODE>
, then the <A HREF="capiref-246.htm#24767" CLASS="XRef">menu-component</A> (if any) and finally the <A HREF="capiref-245.htm#19220" CLASS="XRef">menu</A>. This allows a whole menu to have, for example, <EM CLASS="Variable">
callback-type</EM>
 <CODE CLASS="Code">
:data</CODE>
 without having to specify this in each item. Some items could override this by having their <EM CLASS="Variable">
callback-type</EM>
 slot non-nil if needed.</P>
<P CLASS="RBody">
<A NAME="pgfId-1485908"></A>To specify a mnemonic in the menu item, you can use the initarg <CODE CLASS="Code">
:mnemonic</CODE>
, or the initargs <CODE CLASS="Code">
:mnemonic-title</CODE>
 and <CODE CLASS="Code">
:mnemonic-escape</CODE>
. These initargs are all interpreted just as in <A HREF="capiref-245.htm#19220" CLASS="XRef">menu</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-1474031"></A>A menu item should not be used more in more than one place at a time.</P>
<P CLASS="RBody">
<A NAME="pgfId-2753694"></A><EM CLASS="Variable">
help-key</EM>
 is interpreted as described for <A HREF="capiref-126.htm#29333" CLASS="XRef">element</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-5355513"></A><EM CLASS="Variable">
accelerator</EM>
 can be a character or string specifying a key gesture which will be the accelerator for the menu item.</P>
<P CLASS="RBody">
<A NAME="pgfId-6253263"></A>Note that <CODE CLASS="Code">
both-case-p</CODE>
 characters are not allowed with the single modifier <CODE CLASS="Code">
Shift</CODE>
 in the accelerator argument. So instead of</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-5355514"></A> :accelerator &quot;shift-x&quot;</CODE>
<P CLASS="RBody">
<A NAME="pgfId-5355529"></A>use</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-5355531"></A> :accelerator &quot;X&quot;</CODE>
<P CLASS="RBody">
<A NAME="pgfId-5355533"></A>Note that the <CODE CLASS="Code">
Shift</CODE>
 modifier still appears in the menu.</P>
<P CLASS="RBody">
<A NAME="pgfId-5355535"></A>A <CODE CLASS="Code">
both-case-p</CODE>
 character is allowed with <CODE CLASS="Code">
Shift</CODE>
 if there are other modifiers, for example</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-6267929"></A> :accelerator &quot;alt-shift-x&quot;</CODE>
<P CLASS="RBody">
<A NAME="pgfId-6267930"></A>If <EM CLASS="Variable">
accelerator</EM>
 is a <CODE CLASS="Code">
character</CODE>
 then the system adds the normal modifier for the platform. That is, <CODE CLASS="Code">
Command</CODE>
 on Cocoa and <CODE CLASS="Code">
Control</CODE>
 on Microsoft Windows. The shortcut is validated for the platform.</P>
<P CLASS="RBody">
<A NAME="pgfId-6267931"></A>If <EM CLASS="Variable">
accelerator</EM>
 is a <CODE CLASS="Code">
string</CODE>
 with modifier keys then the system uses it only if it follows the normal conventions for the platform. The shortcut is validated for the platform.</P>
<P CLASS="RBody">
<A NAME="pgfId-6270785"></A>The special virtual modifier name &quot;accelerator&quot; is allowed in string values of <EM CLASS="Variable">
accelerator</EM>
. It is interpreted as the normal modifier key for the platform. For example:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-6270803"></A>:accelerator &quot;accelerator-x&quot;</CODE>
<P CLASS="RBody">
<A NAME="pgfId-6270804"></A>means <CODE CLASS="Code">
Control+X</CODE>
 on Microsoft Windows and Motif, and <CODE CLASS="Code">
Command+X</CODE>
 on Cocoa.</P>
<P CLASS="RBody">
<A NAME="pgfId-6253349"></A>If <EM CLASS="Variable">
accelerator</EM>
 is a plist then its keys are keywords naming some or all of the supported libraries (as returned by <A HREF="capiref-67.htm#82941" CLASS="XRef">default-library</A>). The plist's values are characters or strings which the system interprets as above, except that no check is made that the keyboard shortcut is valid for the platform.</P>
<P CLASS="RBody">
<A NAME="pgfId-6253287"></A><EM CLASS="Variable">
accelerator</EM>
 has a special default value <CODE CLASS="Code">
:default</CODE>
, which means that, depending on <A HREF="capiref-193.htm#72958" CLASS="XRef">interface-keys-style</A> for the interface, a standard accelerator is added if the item title matches a standard menu command.</P>
<P CLASS="RBody">
<A NAME="pgfId-7871700"></A><EM CLASS="Variable">
alternative</EM>
, when true, makes the <CODE CLASS="Code">
menu-item</CODE>
 an &quot;alternative item&quot;. Alternative items are invoked if modifiers are held while selecting the &quot;main item&quot;. These modifiers are defined by the item's <EM CLASS="Variable">
accelerator</EM>
. The main item is the one before the first alternative item, and each alternative item must be within the same menu and menu component. For an example see <CODE CLASS="Code">
examples/capi/elements/accelerators.lisp</CODE>
 and for more information see the section &quot;Alternative menu items&quot; in the <I CLASS="Italic">
CAPI User Guide</I>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-8583262"></A><EM CLASS="Variable">
enabled-function-for-dialog</EM>
 determines whether the item is enabled when a dialog is on the screen. Items in the menu bar menus and sub-menus are disabled by default while a dialog is on the screen on top of the active window. You can override this by specifying <EM CLASS="Variable">
enabled-function-for-dialog</EM>
. The value can be one of:</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-8583268"></A><CODE CLASS="Code">
t</CODE>
</P>
<P CLASS="RDescription-C">The item is enabled whenever there is a dialog.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-8583269"></A><CODE CLASS="Code">
nil</CODE>
</P>
<P CLASS="RDescription-C">The item is disabled whenever there is a dialog.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8583270"></A><CODE CLASS="Code">
:same-as-normal</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8599950"></A>Do the same as when there is no dialog. This depends on the <EM CLASS="Variable">
enabled-function</EM>
 (see <A HREF="capiref-248.htm#21554" CLASS="XRef">menu-object</A>).</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-8583271"></A>A function</P>
<P CLASS="RDescription-C">A function that is called instead of the <EM CLASS="Variable">
enabled-function</EM>
 to decide if the item should be enabled. It is called with one argument, by the default the menu interface, which can be overriden by the initarg <CODE CLASS="Code">
:setup-callback-argument</CODE>
 (see <A HREF="capiref-248.htm#21554" CLASS="XRef">menu-object</A> for details).</P>
<P CLASS="RBody">
<A NAME="pgfId-8583272"></A>The default value of <EM CLASS="Variable">
enabled-function-for-dialog</EM>
 is <CODE CLASS="Code">
nil</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-8521057"></A>Notes</H5>
<P CLASS="RBody">
<A NAME="pgfId-8940992"></A>Some accelerators do not work on some platforms because they have other standard meanings, for example on Microsoft Windows <CODE CLASS="Code">
F1</CODE>
 always invokes the <EM CLASS="Variable">
help-callback</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-8521074"></A>On X11/Motif the accelerators of alternative items do not work.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-900308"></A>Example</H5>
<PRE CLASS="RCode-first"><A NAME="pgfId-900310"></A>(capi:contain (make-instance 'capi:menu-item</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-900525"></A>                             :text &quot;Press Me&quot;))</PRE>
<PRE CLASS="RCode-first"><A NAME="pgfId-900315"></A>(capi:contain (make-instance 'capi:menu-item</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900317"></A>                             :data :red</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900318"></A>                             :print-function</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-900485"></A>                              'string-capitalize))</PRE>
<PRE CLASS="RCode-first"><A NAME="pgfId-900322"></A>(capi:contain (make-instance</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900324"></A>               'capi:menu-item</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900325"></A>               :data :red</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900326"></A>               :print-function 'string-capitalize</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900327"></A>               :callback #'(lambda (data interface)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900328"></A>                             (capi:display-message</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-900329"></A>                              &quot;Pressed &#126;S&quot;</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-900330"></A>                              data))))</PRE>
<P CLASS="RBody">
<A NAME="pgfId-3607441"></A>In this example note how the <B CLASS="Button">
File</B>
 menu gets accelerators automatically for its standard items:</P>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649151"></A>(defun do-menu-item (item) </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649152"></A>  (capi:display-message </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649153"></A>   (format nil &quot;&#126;A&quot; (capi:item-data item))))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649154"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651801"></A>(capi:define-interface mmm () ()</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651802"></A>  (:menu-bar f-menu a-menu)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651803"></A>  (:menus</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651804"></A>   (f-menu</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651805"></A>     &quot;File&quot; </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651806"></A>    ((&quot;Open...&quot; :data &quot;Open...&quot;) </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651807"></A>     (&quot;New&quot;     :data &quot;New&quot;))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651808"></A>    :callback 'do-menu-item </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651809"></A>    :callback-type :item)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651810"></A>   (a-menu</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651811"></A>    &quot;Another Menu&quot; </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651812"></A>    ((&quot;Open...&quot; :data &quot;Another Open&quot;) </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651813"></A>     (&quot;New&quot; :data &quot;Another New&quot;) </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651814"></A>     (&quot;Blancmange&quot; :data &quot;Blancmange&quot; </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651815"></A>                   :accelerator &quot;accelerator-b&quot;))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651816"></A>    :callback 'do-menu-item </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651817"></A>    :callback-type :item))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651818"></A>  (:default-initargs</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651819"></A>   :width 300</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649173"></A>   :height 200))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649174"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3651839"></A>;; This causes automatic accelerators on all platforms.</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6253250"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6253237"></A>;; That is the default behavior on Microsoft Windows.</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649175"></A>(defmethod capi:interface-keys-style ((self mmm))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649176"></A>  :pc)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3649177"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-3607408"></A>(capi:contain (make-instance 'mmm))</PRE>
<P CLASS="RBody">
<A NAME="pgfId-3481616"></A>There are further examples in the files <CODE CLASS="Code">
examples/capi/applications/hangman.lisp</CODE>
 and <CODE CLASS="Code">
examples/capi/printing/fit-to-page.lisp</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-900338"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-900340"></A><A HREF="capiref-33.htm#22482" CLASS="XRef">choice</A><BR>
<A HREF="capiref-193.htm#72958" CLASS="XRef">interface-keys-style</A><BR>
<A HREF="capiref-245.htm#19220" CLASS="XRef">menu</A> <BR>
<A HREF="capiref-246.htm#24767" CLASS="XRef">menu-component</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">CAPI Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="capiref-248.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-246.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
