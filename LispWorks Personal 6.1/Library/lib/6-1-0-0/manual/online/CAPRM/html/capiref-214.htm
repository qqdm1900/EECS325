<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="capiref.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 list-panel
</TITLE>

<LINK REL="next" HREF="capiref-215.htm" TYPE="text/html">
<LINK REL="prev" HREF="capiref-213.htm" TYPE="text/html">
<LINK REL="up" HREF="capiref-4.htm" TYPE="text/html">
<LINK REL="top" HREF="capiref.htm" TYPE="text/html">
<LINK REL="contents" HREF="capiref-2.htm" TYPE="text/html">
<LINK REL="index" HREF="capiref-693.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="capiref.htm">CAPI Reference Manual</A> &gt; <A HREF="capiref-4.htm">1 CAPI Reference Entries</A><BR><BR>
</DIV><A HREF="capiref-215.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-213.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-899047"></A><A NAME="30299"></A>list<A NAME="marker-4164200"></A>-panel</H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-899255"></A>Class</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-899051"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-899053"></A>The class <CODE CLASS="Code">
list-panel</CODE>
 is a pane that can display a group of items and provides support for selecting items and performing actions on them. <A NAME="marker-10055920"></A>Each item may optionally have an image.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-4164173"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-4164174"></A>capi</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-899056"></A>Superclasses</H5>
<P CLASS="RSignature">
<A NAME="pgfId-899058"></A><A HREF="capiref-33.htm#22482" CLASS="XRef">choice</A><BR>
<A HREF="capiref-408.htm#40919" CLASS="XRef">simple-pane</A><BR>
<A HREF="capiref-417.htm#93813" CLASS="XRef">sorted-object</A><BR>
<A HREF="capiref-449.htm#12473" CLASS="XRef">titled-object</A></P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-899061"></A>Subclasses</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1179564"></A><A HREF="capiref-220.htm#23551" CLASS="XRef">list-view</A><BR>
<A HREF="capiref-254.htm#83917" CLASS="XRef">multi-column-list-panel</A></P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-6142825"></A>Initargs</H5>
<P CLASS="RDescription">
<A NAME="pgfId-6142882"></A><CODE CLASS="Code">
:right-click-selection-behavior</CODE>
<A NAME="marker-6142881"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6142950"></A>A keyword or <CODE CLASS="Code">
nil</CODE>
. Controls the behavior on a right mouse button click.</P>
<P CLASS="RDescription">
<A NAME="pgfId-7879069"></A><CODE CLASS="Code">
:color-function</CODE>
<A NAME="marker-7879068"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-7879070"></A>A function designator or <CODE CLASS="Code">
nil</CODE>
. Controls item text color on Microsoft Windows, <A NAME="marker-9281920"></A>Cocoa and GTK+.</P>
<P CLASS="RDescription">
<A NAME="pgfId-9825412"></A><CODE CLASS="Code">
:alternating-background</CODE>
<A NAME="marker-9829726"></A><A NAME="marker-9857064"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-9825414"></A>A boolean influencing the use of alternating background color on Cocoa and GTK+.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-9829730"></A> <CODE CLASS="Code">
:filter</CODE>
<A NAME="marker-8553344"></A></P>
<P CLASS="RDescription-C">A boolean. The default value is <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8801223"></A>The following initargs take effect only when <EM CLASS="Variable">
filter</EM>
 is non-nil.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8804321"></A><CODE CLASS="Code">
:filter-automatic-p</CODE>
<A NAME="marker-8806421"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8804322"></A>A boolean. The default value is <CODE CLASS="Code">
t</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8805982"></A><CODE CLASS="Code">
:filter-callback</CODE>
<A NAME="marker-8806426"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8805983"></A>A function designator or the keyword <CODE CLASS="Code">
:default</CODE>
, which is the default value.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8800771"></A><CODE CLASS="Code">
:filter-change-callback-p</CODE>
<A NAME="marker-8806431"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8801235"></A>A boolean.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8800772"></A><CODE CLASS="Code">
:filter-short-menu-text</CODE>
<A NAME="marker-8806436"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8806455"></A>A boolean. The default value is <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8800774"></A><CODE CLASS="Code">
:filter-matches-title</CODE>
<A NAME="marker-8806441"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8801274"></A>A string, <CODE CLASS="Code">
t</CODE>
 or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-8800775"></A><CODE CLASS="Code">
:filter-help-string</CODE>
<A NAME="marker-8806446"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-8806488"></A>A string, <CODE CLASS="Code">
t</CODE>
 or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-9551268"></A><CODE CLASS="Code">
:keyboard-search-callback</CODE>
<A NAME="marker-9555431"></A><A NAME="marker-9857050"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-9551271"></A>A function that is used to search for an item when the user types ordinary characters.</P>
<P CLASS="RBody">
<A NAME="pgfId-10239400"></A><A NAME="marker-10240636"></A>Initargs for handling images:</P>
<P CLASS="RDescription">
<A NAME="pgfId-10035125"></A><CODE CLASS="Code">
:image-function</CODE>
<A NAME="marker-10055847"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10035126"></A>Returns an image for an item.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035128"></A><CODE CLASS="Code">
:state-image-function</CODE>
<A NAME="marker-10035127"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10035129"></A>Returns a state image for an item.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035131"></A><CODE CLASS="Code">
:image-lists</CODE>
<A NAME="marker-10035130"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10035135"></A>A plist of keywords and <A HREF="capiref-177.htm#12301" CLASS="XRef">image-list</A> objects.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035137"></A><CODE CLASS="Code">
:use-images</CODE>
<A NAME="marker-10035136"></A></P>
<P CLASS="RDescription-C">Flag to specify whether items have images. Defaults to <CODE CLASS="Code">
t</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035139"></A><CODE CLASS="Code">
:use-state-images</CODE>
<A NAME="marker-10035138"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10035140"></A>Flag to specify whether items have state images. Defaults to <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035142"></A><CODE CLASS="Code">
:image-width</CODE>
<A NAME="marker-10035141"></A></P>
<P CLASS="RDescription-C">Defaults to 16.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035144"></A><CODE CLASS="Code">
:image-height</CODE>
<A NAME="marker-10035143"></A></P>
<P CLASS="RDescription-C">Defaults to 16.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035146"></A><CODE CLASS="Code">
:state-image-width</CODE>
<A NAME="marker-10035145"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10035147"></A>Defaults to <EM CLASS="Variable">
image-width</EM>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10035149"></A><CODE CLASS="Code">
:state-image-height</CODE>
<A NAME="marker-10035148"></A></P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10035150"></A>Defaults to <EM CLASS="Variable">
image-height</EM>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-6143005"></A>Accessors</H5>
<P CLASS="RSignature">
<A NAME="pgfId-6143007"></A><A NAME="marker-6143006"></A>list-panel-right-click-selection-behavior<BR>
<A NAME="marker-9555450"></A>list-panel-keyboard-search-callback<BR>
<A NAME="marker-10240626"></A>list-panel-image-<A NAME="marker-10240641"></A>function<BR>
<A NAME="marker-10240631"></A>list-panel-state-image<A NAME="marker-10240649"></A>-function</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1179553"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-899063"></A>The class <CODE CLASS="Code">
list-panel</CODE>
 gains much of its behavior from <A HREF="capiref-33.htm#22482" CLASS="XRef">choice</A>, which is an abstract class that handles items and their selection. By default, a list panel has both horizontal and vertical scrollbars.</P>
<P CLASS="RBody">
<A NAME="pgfId-1182364"></A>The <CODE CLASS="Code">
list-panel</CODE>
 class does not support the <CODE CLASS="Code">
:no-selection</CODE>
 interaction style. For a non-interactive list use a <A HREF="capiref-81.htm#33757" CLASS="XRef">display-pane</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-5949256"></A>To scroll a <CODE CLASS="Code">
list-panel</CODE>
, call <A HREF="capiref-371.htm#scroll" CLASS="XRef">scroll</A> with <EM CLASS="Variable">
scroll-operation</EM>
 <CODE CLASS="Code">
:move</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-4805273"></A><EM CLASS="Variable">
mnemonic-title</EM>
 is interpreted as for <A HREF="capiref-245.htm#19220" CLASS="XRef">menu</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-6143155"></A><EM CLASS="Variable">
right-click-selection-behavior</EM>
 can take the following values:</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-6143157"></A><CODE CLASS="Code">
nil</CODE>
</P>
<P CLASS="RDescription-C">Corresponds to the behavior in LispWorks 4.4 and earlier. The data is not passed.</P>
<P CLASS="RBody">
<A NAME="pgfId-6143159"></A>All non-nil values pass the clicked item as data to the pane menu:</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143161"></A><CODE CLASS="Code">
:existing-or-clicked/restore/discard</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143162"></A>If the clicked item is not already selected, make it be the entire selection while the menu is displayed. If the clicked item is already selected, do not change the selection. If the menu is cancelled, the original selection is restored. If the user chooses an item from the menu, the selection is not restored.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143164"></A><CODE CLASS="Code">
:temporary-selection</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143165"></A>A synonym for <CODE CLASS="Code">
:existing-or-clicked/restore/discard</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143167"></A><CODE CLASS="Code">
:existing-or-clicked/restore/restore</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143168"></A>If the clicked item is not already selected, make it be the entire selection while the menu is displayed. If the clicked item is already selected, do not change the selection. If the user chooses an item from the menu and the item's callback does not set the selection then the original selection is restored after the callback. If the callback sets the selection, then this selection remains. The original selection is restored if the user cancels the menu.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143170"></A><CODE CLASS="Code">
:temporary-restore</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143171"></A>A synonym for <CODE CLASS="Code">
:existing-or-clicked/restore/restore</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143173"></A><CODE CLASS="Code">
:clicked/restore/discard</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143174"></A>Make the clicked item be the entire selection while the menu is displayed. If the menu is cancelled, the original selection is restored. If the user chooses an item from the menu, the selection is not restored.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143176"></A><CODE CLASS="Code">
:temporary-always</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143177"></A>A synonym for <CODE CLASS="Code">
:clicked/restore/discard</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143179"></A><CODE CLASS="Code">
:clicked/restore/restore</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143180"></A>Make the clicked item be the entire selection while the menu is displayed. If the user chooses an item from the menu and the item's callback does not set the selection then the original selection is restored after the callback. If the callback sets the selection, then this selection remains. The original selection is restored if the user cancels the menu.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143182"></A><CODE CLASS="Code">
:existing-or-clicked/discard/discard</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143183"></A>If the clicked item is not already selected, make it be the entire selection while the menu is displayed. If the clicked item is already selected, do not change the selection. The original selection is never restored, regardless of whether the user chooses an item from the menu or cancels the menu.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6217765"></A><CODE CLASS="Code">
:discard-selection</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6217766"></A>A synonym for <CODE CLASS="Code">
:existing-or-clicked/discard/discard</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143188"></A><CODE CLASS="Code">
:clicked/discard/discard</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143189"></A>Make the clicked item be the entire selection. The original selection is never restored, regardless of whether the user chooses an item from the menu or cancels the menu.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143191"></A><CODE CLASS="Code">
:discard-always</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6230968"></A>A synonym for <CODE CLASS="Code">
:clicked/discard/discard</CODE>
.</P>
<P CLASS="RDescription">
<A NAME="pgfId-6143194"></A><CODE CLASS="Code">
:no-change</CODE>
</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-6143195"></A>Does not affect the selection, but the clicked item is nonetheless passed as the data.</P>
<P CLASS="RBody">
<A NAME="pgfId-6143197"></A>The default value of <EM CLASS="Variable">
right-click-selection-behavior</EM>
 is <CODE CLASS="Code">
:no-change</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-7879086"></A><EM CLASS="Variable">
color-function</EM>
 allows you to control the text colors on Microsoft Windows, Cocoa and GTK+. If <EM CLASS="Variable">
color-function</EM>
 is non-nil, then it is a function used to compute the text color of each item, with signature</P>
<P CLASS="RSignature">
<A NAME="pgfId-7882871"></A>color-function <EM CLASS="Variable">
list-panel</EM>
 <EM CLASS="Variable">
item</EM>
 <EM CLASS="Variable">
state</EM>
<CODE CLASS="Code">
 =&gt; </CODE>
<EM CLASS="Variable">
result</EM>
</P>
<P CLASS="RBody">
<A NAME="pgfId-9828452"></A>When <EM CLASS="Variable">
alternating-background</EM>
 is true, the list panel is drawn with alternating background on Cocoa. On GTK+ it provides a hint, which the theme can override. Experience suggests that theme may draw with alternating background even when <EM CLASS="Variable">
alternating-background </EM>
is false, but when it is true they tend to draw it always. The default value of <EM CLASS="Variable">
alternating-background</EM>
 is <CODE CLASS="Code">
nil</CODE>
<EM CLASS="Variable">
.</EM>
</P>
<P CLASS="RBody">
<A NAME="pgfId-9828454"></A><EM CLASS="Variable">
state</EM>
 is a keyword representing the state of the item. It can be one of <CODE CLASS="Code">
:normal</CODE>
, <CODE CLASS="Code">
:selected</CODE>
 or <CODE CLASS="Code">
:disabled</CODE>
. The value <EM CLASS="Variable">
result</EM>
 should be a value suitable for the function <A HREF="capiref-679.htm#17457" CLASS="XRef">convert-color</A>. The pane uses the converted color as the foreground color for the item <EM CLASS="Variable">
item</EM>
. <EM CLASS="Variable">
color-function</EM>
 is called while <EM CLASS="Variable">
list-panel</EM>
 is being drawn, so it should not do heavyweight computations.</P>
<P CLASS="RBody">
<A NAME="pgfId-8829257"></A>If <EM CLASS="Variable">
filter</EM>
 is non-nil, the system automatically adds a <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A> above the list. The items in the <CODE CLASS="Code">
list-panel</CODE>
 are filtered by the value in the <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A>. Filtering displays only those items whose print representation matches the filter. (The print representation is the result of <A HREF="capiref-304.htm#48783" CLASS="XRef">print-collection-item</A>, and is what the user sees.) Only the items that match, or those that do not match if <B CLASS="Button">
Exclude</B>
 is set, are displayed in the <CODE CLASS="Code">
list-panel</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-8822336"></A>Here filtering means mapping over the unfiltered items, collecting each item that matches the current setting in the filter, and then setting the items of the <CODE CLASS="Code">
list-panel</CODE>
 to the collected items.</P>
<P CLASS="RBody">
<A NAME="pgfId-8553385"></A>For a <CODE CLASS="Code">
list-panel</CODE>
 with a filter, <CODE CLASS="Code">
collection-items</CODE>
 returns only the filtered items, and the selection (that is, the result of <CODE CLASS="Code">
choice-selection</CODE>
 and the argument to <CODE CLASS="Code">
(setf choice-selection)</CODE>
 index into the filtered items.</P>
<P CLASS="RBody">
<A NAME="pgfId-8553386"></A>Calling <CODE CLASS="Code">
(setf collection-items)</CODE>
 on a filtered <CODE CLASS="Code">
list-panel</CODE>
 sets an internal unfiltered list, and then clears the filtering so that all items are visible.</P>
<P CLASS="RBody">
<A NAME="pgfId-8553375"></A>To get and set the unfiltered items, use the accessor <A HREF="capiref-219.htm#40043" CLASS="XRef">list-panel-unfiltered-items</A>. To access the filter-state, use <A HREF="capiref-216.htm#93574" CLASS="XRef">list-panel-filter-state</A>. To access both the unfiltered items and the filter simultanously, which is especially useful when setting both of them at the same time, use <A HREF="capiref-217.htm#32215" CLASS="XRef">list-panel-items-and-filter</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-8846024"></A><EM CLASS="Variable">
filter-automatic-p</EM>
 controls whether the filter automatically does the filtering whenever the text in the filter changes, and <EM CLASS="Variable">
filter-callback</EM>
 defines the callback of the <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-8849878"></A>If <EM CLASS="Variable">
filter-automatic-p</EM>
 is <CODE CLASS="Code">
t</CODE>
, whenever a change occurs in the filter the list is refreshed against the new value in the filter. The <EM CLASS="Variable">
filter-callback</EM>
 (if non-nil) is called with two arguments, the <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A> and the <CODE CLASS="Code">
list-panel</CODE>
 itself, when the user &quot;confirms&quot; (that is, she presses <CODE CLASS="Code">
Return</CODE>
 or clicks the <B CLASS="Button">
Confirm</B>
 button). If <EM CLASS="Variable">
filter-automatic-p</EM>
 is false and <EM CLASS="Variable">
filter-callabck</EM>
 is <CODE CLASS="Code">
:default</CODE>
, then the <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A> is given a callback that does the filtering when the user &quot;confirms&quot;. If <EM CLASS="Variable">
filter-automatic-p</EM>
 is false and <EM CLASS="Variable">
filter-callback</EM>
 is non-nil, then no filtering is done explicitly, and it is the responsibility of the callback to do any filtering that is required.</P>
<P CLASS="RBody">
<A NAME="pgfId-8883825"></A><EM CLASS="Variable">
filter-matches-title</EM>
 (default <CODE CLASS="Code">
t</CODE>
) and <EM CLASS="Variable">
filter-help-string</EM>
 (default <CODE CLASS="Code">
t</CODE>
) are passed down to the filtering layout through the corresponding <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A> initargs:</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-8883830"></A><EM CLASS="Variable">
filter-matches-title</EM>
</P>
<P CLASS="RDescription-C"><CODE CLASS="Code">
:matches-title</CODE>
</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-8776573"></A><EM CLASS="Variable">
filter-help-string</EM>
</P>
<P CLASS="RDescription-C"><CODE CLASS="Code">
:help-string</CODE>
</P>
<P CLASS="RBody">
<A NAME="pgfId-8776574"></A>See  <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A> for a description of these initargs.</P>
<P CLASS="RBody">
<A NAME="pgfId-8883837"></A>If <EM CLASS="Variable">
filter-short-menu-text</EM>
 is true, the filter menu has a short title. For example if the filter is set for case-sensitive plain inclusive matching the short label is <B CLASS="Button">
PMC</B>
. If <EM CLASS="Variable">
filter-short-menu-text</EM>
 were false then this label would be <B CLASS="Button">
Filter:C</B>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-9572179"></A><EM CLASS="Variable">
keyboard-search-callback</EM>
 should be a function with signature:</P>
<P CLASS="RSignature">
<A NAME="pgfId-9572180"></A>keyboard-search-callback <EM CLASS="Variable">
pane</EM>
 <EM CLASS="Variable">
string</EM>
 <EM CLASS="Variable">
position</EM>
 =&gt; <EM CLASS="Variable">
index</EM>
, <EM CLASS="Variable">
last-match</EM>
, <EM CLASS="Variable">
last-match-reset-time</EM>
</P>
<P CLASS="RBody">
<A NAME="pgfId-9572181"></A><EM CLASS="Variable">
pane</EM>
 is the <CODE CLASS="Code">
list-panel</CODE>
, <EM CLASS="Variable">
string</EM>
 is a string to match and <EM CLASS="Variable">
position</EM>
 is the item index from which the system thinks that the search should start.</P>
<P CLASS="RBody">
<A NAME="pgfId-9572182"></A><EM CLASS="Variable">
string</EM>
 contains the character that the user typed, appended to the &quot;last match&quot;, if there is one. There is a &quot;last match&quot; if the previous call to <EM CLASS="Variable">
keyboard-search-callback</EM>
 returned it (see below).</P>
<P CLASS="RBody">
<A NAME="pgfId-9572183"></A><EM CLASS="Variable">
index</EM>
 is an index in the <CODE CLASS="Code">
collection-items</CODE>
 to move to. Apart from an integer inside the items range of the <CODE CLASS="Code">
list-panel</CODE>
, this can be <CODE CLASS="Code">
nil</CODE>
, which means do nothing, or <CODE CLASS="Code">
:no-change</CODE>
, which selects the current item.</P>
<P CLASS="RBody">
<A NAME="pgfId-9572184"></A><EM CLASS="Variable">
last-match</EM>
 is a string that should be recorded as the &quot;last match&quot; (if it is not a string, the &quot;last match&quot; is reset). This is prepended to the character in the next call, if the character is typed before the &quot;last match&quot; is reset.</P>
<P CLASS="RBody">
<A NAME="pgfId-9572185"></A><EM CLASS="Variable">
last-match-reset-time</EM>
 is the time to wait before resetting the &quot;last match&quot;, in seconds. Once this time passes, the last match is reset to <CODE CLASS="Code">
nil</CODE>
. If <EM CLASS="Variable">
last-match-reset-time</EM>
 is <CODE CLASS="Code">
nil</CODE>
, the default value (which defaults to 1) is used. This default value can be changed by <A HREF="capiref-392.htm#22351" CLASS="XRef">set-list-panel-keyboard-search-reset-time</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-9600301"></A>You can simplify the implementation of <EM CLASS="Variable">
keyboard-search-callback</EM>
 by using <A HREF="capiref-218.htm#59604" CLASS="XRef">list-panel-search-with-function</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-9572173"></A>As a special case, passing <CODE CLASS="Code">
:keyboard-search-callback t</CODE>
 tells CAPI to use its own internal search mechanism in preference to the native one. That can be useful on GTK+, where the default is to use the native search mechanism (for GTK+ versions after 2.4).</P>
<P CLASS="RBody">
<A NAME="pgfId-10060253"></A>The <EM CLASS="Variable">
image-function</EM>
 is called on an item to return an image associated with the item. It can return one of the following:</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10060254"></A>A pathname or string</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10060255"></A>This specifies the filename of a file suitable for loading with <A HREF="capiref-592.htm#43526" CLASS="XRef">load-image</A>. Currently this must be a bitmap file.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10241271"></A>A symbol</P>
<P CLASS="RDescription-C">The symbol must have been previously registered by means of a call to <CODE CLASS="Code">
<A HREF="capiref-627.htm#80995" CLASS="XRef">register-image-translation</A></CODE>
. It can also one of the following symbols, which map to standard images: <CODE CLASS="Code">
:std-cut</CODE>
<A NAME="marker-10241275"></A>, <CODE CLASS="Code">
:std-copy</CODE>
<A NAME="marker-10241276"></A>, <CODE CLASS="Code">
:std-paste</CODE>
<A NAME="marker-10241277"></A>, <CODE CLASS="Code">
:std-undo</CODE>
<A NAME="marker-10241278"></A>, <CODE CLASS="Code">
:std-redo</CODE>
<A NAME="marker-10241279"></A>, <CODE CLASS="Code">
:std-delete</CODE>
<A NAME="marker-10241280"></A>, <CODE CLASS="Code">
:std-file-new</CODE>
<A NAME="marker-10241281"></A>, <CODE CLASS="Code">
:std-file-open</CODE>
<A NAME="marker-10241282"></A>, <CODE CLASS="Code">
:std-file-save</CODE>
<A NAME="marker-10241283"></A>, <CODE CLASS="Code">
:std-print</CODE>
<A NAME="marker-10241284"></A>, <CODE CLASS="Code">
:std-print-pre</CODE>
<A NAME="marker-10241285"></A>, <CODE CLASS="Code">
:std-properties</CODE>
<A NAME="marker-10241286"></A>, <CODE CLASS="Code">
:std-help</CODE>
<A NAME="marker-10241287"></A>, <CODE CLASS="Code">
:std-find</CODE>
<A NAME="marker-10241288"></A> and <CODE CLASS="Code">
:std-replace</CODE>
<A NAME="marker-10241289"></A>.</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10241291"></A><A NAME="marker-10241290"></A>On Microsoft Windows, the following symbols are also recognized. They map to view images: <CODE CLASS="Code">
:view-large-icons</CODE>
<A NAME="marker-10241292"></A>, <CODE CLASS="Code">
:view-small-icons</CODE>
<A NAME="marker-10241293"></A>, <CODE CLASS="Code">
:view-list</CODE>
<A NAME="marker-10241294"></A>, <CODE CLASS="Code">
:view-details</CODE>
<A NAME="marker-10241295"></A>, <CODE CLASS="Code">
:view-sort-name</CODE>
<A NAME="marker-10241296"></A>, <CODE CLASS="Code">
:view-sort-size</CODE>
<A NAME="marker-10241297"></A>, <CODE CLASS="Code">
:view-sort-date</CODE>
<A NAME="marker-10241298"></A>, <CODE CLASS="Code">
:view-sort-type</CODE>
<A NAME="marker-10241299"></A>, <CODE CLASS="Code">
:view-parent-folder</CODE>
<A NAME="marker-10241300"></A>, <CODE CLASS="Code">
:view-net-connect</CODE>
<A NAME="marker-10263519"></A>, <CODE CLASS="Code">
:view-net-disconnect</CODE>
<A NAME="marker-10241301"></A> and <CODE CLASS="Code">
:view-new-folder</CODE>
<A NAME="marker-10241302"></A>.</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10241304"></A><A NAME="marker-10241303"></A>Also on Microsoft Windows, these symbols are recognized. They map to history images: <CODE CLASS="Code">
:hist-back</CODE>
<A NAME="marker-10241305"></A>, <CODE CLASS="Code">
:hist-forward</CODE>
<A NAME="marker-10241306"></A>, <CODE CLASS="Code">
:hist-favorites</CODE>
<A NAME="marker-10241307"></A>, <CODE CLASS="Code">
:hist-addtofavorites</CODE>
<A NAME="marker-10241308"></A> and <CODE CLASS="Code">
:hist-viewtree</CODE>
<A NAME="marker-10241309"></A>.</P>
<P CLASS="RDescription">
<A NAME="pgfId-10060259"></A>An image object, as returned by <A HREF="capiref-592.htm#43526" CLASS="XRef">load-image</A>.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10060267"></A>An image locator object</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-10060268"></A>This allowing a single bitmap to be created which contains several button images side by side. See <A HREF="capiref-232.htm#38910" CLASS="XRef">make-image-locator</A> for more information. On Microsoft Windows, it also allows access to bitmaps stored as resources in a DLL.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10060272"></A>An integer</P>
<P CLASS="RDescription-C">This is a zero-based index into the list panel's image lists. This is generally only useful if the image list is created explicitly. See <A HREF="capiref-177.htm#12301" CLASS="XRef">image-list</A> for more details.</P>
<P CLASS="RBody">
<A NAME="pgfId-10060279"></A>The <EM CLASS="Variable">
state-image-function</EM>
 is called on an item to determine the state image: an additional optional image used to indicate the state of an item. It can return one of the above, or <CODE CLASS="Code">
nil</CODE>
 to indicate that there is no state image.</P>
<P CLASS="RBody">
<A NAME="pgfId-10060280"></A>If <EM CLASS="Variable">
image-lists</EM>
 is specified, it should be a plist containing the following keywords as keys. The corresponding values should be <A HREF="capiref-177.htm#12301" CLASS="XRef">image-list</A> objects.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10060284"></A><CODE CLASS="Code">
:normal</CODE>
</P>
<P CLASS="RDescription-C">Specifies an <CODE CLASS="Code">
image-list</CODE>
 object that contains the item images. The <EM CLASS="Variable">
image-function</EM>
 should return a numeric index into this <CODE CLASS="Code">
image-list</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-10060285"></A><CODE CLASS="Code">
:state</CODE>
</P>
<P CLASS="RDescription-C">Specifies an <CODE CLASS="Code">
image-list</CODE>
 object that contains the state images. The <EM CLASS="Variable">
state-image-function</EM>
 should return a numeric index into this <CODE CLASS="Code">
image-list</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-8827577"></A>Notes</H5>
<P CLASS="RBody">
<A NAME="pgfId-8827578"></A>If you use <EM CLASS="Variable">
filter</EM>
:</P>
<OL>
<LI CLASS="RStep-1">
<A NAME="pgfId-8829267"></A>You should not rely on the <CODE CLASS="Code">
element-parent</CODE>
 of the <CODE CLASS="Code">
list-panel</CODE>
, because it is implemented by wrapping some layouts around the <CODE CLASS="Code">
list-panel</CODE>
.</LI>
<LI CLASS="RStep">
<A NAME="pgfId-8829276"></A>The filter is actually a filtering layout, so it has the same interactive semantics as <A HREF="capiref-139.htm#17387" CLASS="XRef">filtering-layout</A>.</LI>
</OL>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-899066"></A>Example</H5>
<PRE CLASS="RCode-first"><A NAME="pgfId-4355791"></A>(setq list (capi:contain</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355792"></A>            (make-instance 'capi:list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355793"></A>                           :items '(:red :blue :green)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355794"></A>                           :selected-item :blue</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355795"></A>                           :print-function</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355796"></A>                           'string-capitalize)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355797"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355798"></A>(capi:apply-in-pane-process </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355799"></A> list #'(setf capi:choice-selected-item) :red list)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355800"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4355801"></A>(capi:apply-in-pane-process </PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-899086"></A> list #'(setf capi:choice-selected-item) :green list)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-4358669"></A>(capi:contain (make-instance</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-899088"></A>               'capi:list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-899089"></A>               :items '(:red :blue :green)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-899090"></A>               :print-function 'string-capitalize</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-899133"></A>               :selection-callback</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1115295"></A>                 #'(lambda (data interface)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-899134"></A>                           (capi:display-message</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-6164857"></A>                            &quot;&#126;S&quot; data))))</PRE>
<P CLASS="RBody">
<A NAME="pgfId-6164858"></A>This example illustrates the use of <CODE CLASS="Code">
:right-click-selection-behavior</CODE>
:</P>
<PRE CLASS="RCode-first"><A NAME="pgfId-6164862"></A>(capi:define-interface click ()</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164859"></A>  ((keyword :initarg :right-click-selection-behavior))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148113"></A>  (:panes</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148114"></A>   (list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148115"></A>    capi:list-panel</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148116"></A>    :items '(&quot;foo&quot; &quot;bar&quot; &quot;baz&quot; &quot;quux&quot;)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148117"></A>    :visible-min-height '(:character 4)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148118"></A>    :pane-menu 'my-menu</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148119"></A>    :interaction :multiple-selection</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148120"></A>    :right-click-selection-behavior keyword)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148121"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164627"></A>(defun my-menu (pane data x y)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164628"></A>  (declare (ignore pane x y))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164629"></A>  (make-instance 'capi:menu</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164630"></A>                 :items (list &quot;Hi There&quot;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164631"></A>                              &quot;&quot;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6164632"></A>                              &quot;Here's the data:&quot;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148125"></A>                              data)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148126"></A>&nbsp;</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148127"></A>(capi:display</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148128"></A>   (make-instance 'click</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-6148129"></A>                  :right-click-selection-behavior</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-6148130"></A>		  :clicked/restore/restore))</PRE>
<P CLASS="RBody">
<A NAME="pgfId-6148132"></A>See also the example in <CODE CLASS="Code">
examples/capi/choice/list-pane-pane-menu.lisp</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-6168151"></A>There are further examples in the directory <CODE CLASS="Code">
examples/capi/choice/</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-8120097"></A>This example illustrates the use of <EM CLASS="Variable">
color-function</EM>
:</P>
<P CLASS="RBody">
<A NAME="pgfId-8120144"></A><CODE CLASS="Code">
examples/capi/applications/simple-symbol-browser.lisp</CODE>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-899101"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-899103"></A><A HREF="capiref-23.htm#40715" CLASS="XRef">button-panel</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">CAPI Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="capiref-215.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiref-213.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiref-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiref.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiref-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiref-693.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
