<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 19.3.1.7  Building vendor-specific SQL
</TITLE>

<LINK REL="next" HREF="lw-376.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-374.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-368.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-343.htm">19 Common SQL</A> &gt; <A HREF="lw-367.htm">19.3  Functional interface</A> &gt; <A HREF="lw-368.htm">19.3.1  Functional Data Manipulation Language (FDML)</A><BR><BR>
</DIV><A HREF="lw-376.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-374.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-368.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM3Heading">
<A NAME="pgfId-904145"></A>19.3.1.7  Building vendor-specific SQL</H3>
<P CLASS="Body">
<A NAME="pgfId-904151"></A>Common SQL does not provide a general interface to vendor-specific syntax.</P>
<P CLASS="Body">
<A NAME="pgfId-904153"></A>There are two approaches you can take with SQL such as this:</P>
<PRE CLASS="Code-first"><A NAME="pgfId-904155"></A>SELECT B.PARTY_CODE_ALIAS, A.VALUE FROM CODES A, CODE_ALIASES B</PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-904156"></A>     WHERE A.DOMAIN=B.CODE_DOMAIN(+) AND A.VALUE=B.CODE_VALUE(+)</PRE>
<PRE CLASS="Code-last"><A NAME="pgfId-904220"></A>           AND B.PARTY_ID(+)=&lt;party_id&gt;</PRE>
<OL>
<LI CLASS="Step-1">
<A NAME="pgfId-904221"></A>Construct the string as above and then call <A HREF="lw-1253.htm#39816" CLASS="XRef">query</A> as described in <A HREF="lw-374.htm#80398" CLASS="XRef">Specifying SQL directly</A>.</LI>
<LI CLASS="Step">
<A NAME="pgfId-904222"></A>Use <A HREF="lw-1265.htm#12961" CLASS="XRef">sql-expression</A> to construct the vendor-specific pieces of the SQL. The above expression can be written like this:</LI>
</OL>
<PRE CLASS="Code-first"><A NAME="pgfId-904246"></A>(sql:select [b party_code_alias] [a value]</PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-904247"></A>            :from '([codes a] [codes_aliases b])</PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-904248"></A>            :where [and [= [a domain] </PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-904249"></A>                           (sql:sql-expression </PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-904250"></A>                            :string &quot;B.CODE_DOMAIN(+)&quot;)]</PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-904251"></A>                        [= (sql:sql-expression </PRE>
<PRE CLASS="Code-last"><A NAME="pgfId-904149"></A>                            :string &quot;B.PARTY_ID(+)&quot;) PARTY-ID]])</PRE>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-376.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-374.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-368.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
