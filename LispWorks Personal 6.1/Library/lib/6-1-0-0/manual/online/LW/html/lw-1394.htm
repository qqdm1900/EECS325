<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 int32-logand
</TITLE>

<LINK REL="next" HREF="lw-1395.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-1393.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-1330.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-1330.htm">40 The SYSTEM Package</A><BR><BR>
</DIV><A HREF="lw-1395.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-1393.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-1330.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-1535939"></A><A NAME="25508"></A>int32<A NAME="marker-1535938"></A>-logand</H4>
<P CLASS="REntry2">
<A NAME="pgfId-1535942"></A><A NAME="13001"></A>int32<A NAME="marker-1535941"></A>-logandc1</P>
<P CLASS="REntry2">
<A NAME="pgfId-1543092"></A><A NAME="47824"></A>int32<A NAME="marker-1543091"></A>-logandc2</P>
<P CLASS="REntry2">
<A NAME="pgfId-1552138"></A>int32<A NAME="marker-1552137"></A>-logbitp</P>
<P CLASS="REntry2">
<A NAME="pgfId-1586414"></A><A NAME="88679"></A>int32<A NAME="marker-1586413"></A>-logeqv</P>
<P CLASS="REntry2">
<A NAME="pgfId-1586938"></A><A NAME="28111"></A>int32<A NAME="marker-1586937"></A>-logior</P>
<P CLASS="REntry2">
<A NAME="pgfId-1587896"></A><A NAME="79245"></A>int32<A NAME="marker-1587895"></A>-lognand</P>
<P CLASS="REntry2">
<A NAME="pgfId-1588364"></A><A NAME="71170"></A>int32<A NAME="marker-1588363"></A>-lognor</P>
<P CLASS="REntry2">
<A NAME="pgfId-1588920"></A><A NAME="53664"></A>int32<A NAME="marker-1588919"></A>-lognot</P>
<P CLASS="REntry2">
<A NAME="pgfId-1589818"></A><A NAME="93313"></A>int32<A NAME="marker-1589817"></A>-logorc1</P>
<P CLASS="REntry2">
<A NAME="pgfId-1589919"></A><A NAME="33197"></A>int32<A NAME="marker-1589918"></A>-logorc2</P>
<P CLASS="REntry2">
<A NAME="pgfId-1590160"></A>int32<A NAME="marker-1590159"></A>-logtest</P>
<P CLASS="REntry2">
<A NAME="pgfId-1590257"></A><A NAME="68863"></A>int32<A NAME="marker-1590256"></A>-logxor</P>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-1534666"></A>Functions</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1092208"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-1092212"></A>The bitwise logical operators for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1092213"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1092214"></A>system</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1092215"></A>Signatures</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1092216"></A>int32-logand <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1536320"></A>int32-logandc1 <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1546571"></A>int32-logandc2 <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1550255"></A>int32-logbitp <EM CLASS="Variable">
index</EM>
 <EM CLASS="Variable">
x</EM>
 =&gt; <EM CLASS="Variable">
result</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1578796"></A>int32-logeqv <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1579299"></A>int32-logior <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1582078"></A>int32-lognand <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1584875"></A>int32-lognor <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1585299"></A>int32-lognot <EM CLASS="Variable">
x</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1585993"></A>int32-logorc1 <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1590011"></A>int32-logorc2 <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1590340"></A>int32-logtest <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
result</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-1590429"></A>int32-logxor <EM CLASS="Variable">
x</EM>
 <EM CLASS="Variable">
y</EM>
 =&gt; <EM CLASS="Variable">
int32</EM>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1092217"></A>Arguments</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1092221"></A><EM CLASS="Variable">
x</EM>
</P>
<P CLASS="RDescription-C">An <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> object or an integer of type <CODE CLASS="Code">
(signed-byte 32)</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1092225"></A><EM CLASS="Variable">
y</EM>
</P>
<P CLASS="RDescription-C">An <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> object or an integer of type <CODE CLASS="Code">
(signed-byte 32)</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1548835"></A><EM CLASS="Variable">
index</P>
<P CLASS="RDescription-C"></EM>
An <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> object or an integer of type <CODE CLASS="Code">
(signed-byte 32)</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1092226"></A>Values</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1092230"></A><EM CLASS="Variable">
int32</EM>
</P>
<P CLASS="RDescription-C"> An <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> object.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1549491"></A><EM CLASS="Variable">
result</EM>
</P>
<P CLASS="RDescription-C"> An boolean.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1092231"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-1092235"></A>The function <CODE CLASS="Code">
int32-logand </CODE>
is the bitwise logical 'and' operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects.</P>
<P CLASS="RBody">
<A NAME="pgfId-1539737"></A>The function <CODE CLASS="Code">
int32-logandc1 </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which 'ands' the complement of <EM CLASS="Variable">
x</EM>
 with <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1547684"></A>The function <CODE CLASS="Code">
int32-logandc2 </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which 'ands' <EM CLASS="Variable">
x</EM>
 with the complement of <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1551355"></A>The function <CODE CLASS="Code">
int32-logbitp</CODE>
 is the test for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which returns <CODE CLASS="Code">
t</CODE>
 if if the bit at index <EM CLASS="Variable">
index</EM>
 in <EM CLASS="Variable">
x</EM>
 is 1, and <CODE CLASS="Code">
nil</CODE>
 if it is 0.</P>
<P CLASS="RBody">
<A NAME="pgfId-1589490"></A>The function <CODE CLASS="Code">
int32-logeqv </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which returns the complement of the 'exclusive or' of <EM CLASS="Variable">
x</EM>
 and <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1589494"></A>The function <CODE CLASS="Code">
int32-logior </CODE>
is the bitwise logical 'inclusive or' operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects.</P>
<P CLASS="RBody">
<A NAME="pgfId-1589498"></A>The function <CODE CLASS="Code">
int32-lognand </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which returns the complement of the 'and' of <EM CLASS="Variable">
x</EM>
 and <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1589502"></A>The function <CODE CLASS="Code">
int32-lognor </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which returns the complement of the 'inclusive or' of <EM CLASS="Variable">
x</EM>
 and <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1589506"></A>The function <CODE CLASS="Code">
int32-lognot </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which returns the complement of its argument <EM CLASS="Variable">
x</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1590960"></A>The function <CODE CLASS="Code">
int32-logorc1 </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which 'inclusive ors'  the complement of <EM CLASS="Variable">
x</EM>
 with <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1590964"></A>The function <CODE CLASS="Code">
int32-logorc2 </CODE>
is the bitwise logical operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which 'inclusive ors' <EM CLASS="Variable">
x</EM>
 with the complement of <EM CLASS="Variable">
y</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1590971"></A>The function <CODE CLASS="Code">
int32-logtest</CODE>
 is the bitwise test for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects which returns <CODE CLASS="Code">
t</CODE>
 if any of the bits designated by 1 in <EM CLASS="Variable">
x</EM>
 is 1 in <EM CLASS="Variable">
y</EM>
, and returns <CODE CLASS="Code">
nil</CODE>
 otherwise.</P>
<P CLASS="RBody">
<A NAME="pgfId-1590972"></A>The function <CODE CLASS="Code">
int32-logxor </CODE>
is the bitwise logical 'exclusive or' operator for <A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A> objects.</P>
<P CLASS="RBody">
<A NAME="pgfId-1092238"></A>See the section <A HREF="lw-116.htm#76401" CLASS="XRef">Fast 32-bit arithmetic</A> for more information about the INT32 API.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1125583"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-1125587"></A><A HREF="lw-1386.htm#46746" CLASS="XRef">int32</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-1395.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-1393.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-1330.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
