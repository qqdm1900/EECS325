<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 13.5  Multiprocessing in a dynamic library
</TITLE>

<LINK REL="next" HREF="lw-227.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-225.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-216.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-216.htm">13 LispWorks as a dynamic library</A><BR><BR>
</DIV><A HREF="lw-227.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-225.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-216.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM1Heading">
<A NAME="pgfId-892212"></A>13.5  <A NAME="49818"></A>Multiprocessing in a dynamic library</H3>
<P CLASS="Body">
<A NAME="pgfId-892257"></A>Multiprocessing is started automatically in a LispWorks dynamic library. Therefore you can arrange for Lisp initialization operations by adding process specifications to <CODE CLASS="Code">
</CODE>
<A NAME="marker-892328"></A><A HREF="lw-1034.htm#18630" CLASS="XRef">*initial-processes*</A>.</P>
<P CLASS="Body">
<A NAME="pgfId-892323"></A>For example, if you have a function like this:</P>
<PRE CLASS="Code-first"><A NAME="pgfId-892258"></A>(defun my-server ()</PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-892259"></A>  (let ((s (establish-a-socket)))</PRE>
<PRE CLASS="Code-last"><A NAME="pgfId-892260"></A>    (loop (accept-connection s))))</PRE>
<P CLASS="Body">
<A NAME="pgfId-892261"></A>you need to do something like:</P>
<PRE CLASS="Code-first"><A NAME="pgfId-892262"></A>(pushnew '(&quot;My server&quot; () my-server) mp:*initial-processes*</PRE>
<PRE CLASS="Code-last"><A NAME="pgfId-892263"></A>         :test 'equalp)</PRE>
<P CLASS="Body">
<A NAME="pgfId-891310"></A>before saving or delivering your library.</P>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-227.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-225.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-216.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
