<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 define-dde-server-function
</TITLE>

<LINK REL="next" HREF="lw-1518.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-1516.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-1507.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-1507.htm">44 The DDE server interface</A><BR><BR>
</DIV><A HREF="lw-1518.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-1516.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-1507.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-906567"></A><A NAME="32469"></A>define<A NAME="marker-937396"></A>-dde-server-function</H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-906568"></A>Macro</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-906569"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-906572"></A>Defines a server function that is called when a specific transaction occurs.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-906573"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-906576"></A>win32</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-906577"></A>Signature</H5>
<P CLASS="RSignature">
<A NAME="pgfId-886319"></A>define-dde-server-function <EM CLASS="Variable">
name-and-options</EM>
 <EM CLASS="Variable">
transaction</EM>
 (<EM CLASS="Variable">
binding</EM>
*) <EM CLASS="Variable">
form</EM>
* =&gt; <EM CLASS="Variable">
name</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-906589"></A><EM CLASS="Variable">
name-and-options</EM>
 ::= <EM CLASS="Variable">
name</EM>
 | (<EM CLASS="Variable">
name</EM>
 [[<EM CLASS="Variable">
option</EM>
]])</P>
<P CLASS="RSignature">
<A NAME="pgfId-1035669"></A><EM CLASS="Variable">
transaction</EM>
 ::= :request | :poke | :execute</P>
<P CLASS="RSignature">
<A NAME="pgfId-1035670"></A><EM CLASS="Variable">
option</EM>
 ::= :server <EM CLASS="Variable">
server</EM>
 | :topic-class <EM CLASS="Variable">
topic-class</EM>
 | :topic <EM CLASS="Variable">
topic</EM>
 | :item <EM CLASS="Variable">
item</EM>
 | :format <EM CLASS="Variable">
format</EM>
 | :command <EM CLASS="Variable">
command</EM>
 | :result-type <EM CLASS="Variable">
result-type</EM>
 | :advisep <EM CLASS="Variable">
advisep</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-886334"></A><EM CLASS="Variable">
binding</EM>
 ::= <EM CLASS="Variable">
var-binding</EM>
 | <EM CLASS="Variable">
execute-arg-binding</EM>
</P>
<P CLASS="RSignature">
<A NAME="pgfId-886336"></A><EM CLASS="Variable">
var-binding</EM>
 ::= (<EM CLASS="Variable">
var</EM>
 :server) | (<EM CLASS="Variable">
var</EM>
 :topic) | (<EM CLASS="Variable">
var</EM>
 :data [<EM CLASS="Variable">
data-type</EM>
]) | (<EM CLASS="Variable">
var</EM>
 :format)</P>
<P CLASS="RSignature">
<A NAME="pgfId-886341"></A><EM CLASS="Variable">
execute-arg-binding</EM>
 ::= <EM CLASS="Variable">
var</EM>
 | (<EM CLASS="Variable">
var</EM>
 <EM CLASS="Variable">
type-spec</EM>
)</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-906616"></A>Arguments</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907428"></A><EM CLASS="Variable">
name</EM>
</P>
<P CLASS="RDescription-C">A symbol.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907430"></A><EM CLASS="Variable">
transaction</EM>
</P>
<P CLASS="RDescription-C">A keyword.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907443"></A><EM CLASS="Variable">
server</EM>
</P>
<P CLASS="RDescription-C">A server object.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907444"></A><EM CLASS="Variable">
topic-class</EM>
</P>
<P CLASS="RDescription-C">A topic class.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907445"></A><EM CLASS="Variable">
topic</EM>
</P>
<P CLASS="RDescription-C">A symbol naming a dispatch topic.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907446"></A><EM CLASS="Variable">
item</EM>
</P>
<P CLASS="RDescription-C">A string.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907447"></A><EM CLASS="Variable">
format</EM>
</P>
<P CLASS="RDescription-C">A keyword.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907448"></A><EM CLASS="Variable">
command</EM>
</P>
<P CLASS="RDescription-C">A string.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907449"></A><EM CLASS="Variable">
result-type</EM>
</P>
<P CLASS="RDescription-C">A data type.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907450"></A><EM CLASS="Variable">
advisep</EM>
</P>
<P CLASS="RDescription-C">A boolean.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907434"></A><EM CLASS="Variable">
var</EM>
</P>
<P CLASS="RDescription-C">A variable.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907435"></A><EM CLASS="Variable">
data-type</EM>
</P>
<P CLASS="RDescription-C">A data type.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-907451"></A><EM CLASS="Variable">
type-spec</EM>
</P>
<P CLASS="RDescription-C">A data type.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-912361"></A><EM CLASS="Variable">
form</EM>
</P>
<P CLASS="RDescription-C">A Lisp form.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-906620"></A>Values</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-906622"></A><EM CLASS="Variable">
name</P>
<P CLASS="RDescription-C"></EM>
A symbol.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-906624"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-886344"></A>The macro <CODE CLASS="Code">
define-dde-server-function</CODE>
 is used to define a server function, called <EM CLASS="Variable">
name</EM>
, which is called when a specific transaction occurs. The defined function may either be attached to a server class (using the dispatching capabilities built into the server implementation) or to a named dispatch topic.</P>
<UL>
<LI CLASS="RBullet">
<A NAME="pgfId-886349"></A>To attach the definition to a server, <CODE CLASS="Code">
:server</CODE>
 should be used to specify the server class. <CODE CLASS="Code">
:topic-class</CODE>
 may be used to specify the topic-class for which this definition should be used. It can be a symbol which names a <CODE CLASS="Code">
topic-class</CODE>
, or <CODE CLASS="Code">
t</CODE>
 (meaning All topics, this is the default for execute transactions), or<CODE CLASS="Code">
:system</CODE>
 (The System topic), or<CODE CLASS="Code">
:non-system</CODE>
 (any topic except the System topic). In the case of execute transactions only, <CODE CLASS="Code">
:topic-class</CODE>
 defaults to <CODE CLASS="Code">
t</CODE>
; in all other cases, it must be specified. Typically, execute transactions ignore the topic of the conversation. Alternatively, you may choose to only support execute transactions in the system topic.</LI>
<LI CLASS="RBullet">
<A NAME="pgfId-886364"></A>A server function may instead be attached to a particular instance of <CODE CLASS="Code">
dde-dispatch-topic</CODE>
, previously defined by <A HREF="lw-1515.htm#36921" CLASS="XRef">define-dde-dispatch-topic</A>. This is the main use of dispatching topics. In this case <CODE CLASS="Code">
:topic</CODE>
 should be provided with a symbol that names a dispatching topic. The function is installed on that topic, and only applies to that topic.</LI>
</UL>
<P CLASS="RBody">
<A NAME="pgfId-929425"></A>In the case of a request or poke transaction, <EM CLASS="Variable">
item</EM>
 is a string defining the item name for which this definition should be invoked. It defaults to the capitalized print-name of <EM CLASS="Variable">
name</EM>
, with hyphens removed.</P>
<P CLASS="RBody">
<A NAME="pgfId-886378"></A>For request transactions, the <CODE CLASS="Code">
:format</CODE>
 option is used to specify the format understood. It defaults to <CODE CLASS="Code">
:text</CODE>
. It can be specified as <CODE CLASS="Code">
:all</CODE>
, in which case the <CODE CLASS="Code">
:format</CODE>
 binding may be used to determine the actual format requested (see below).</P>
<P CLASS="RBody">
<A NAME="pgfId-886383"></A>In the case of an execute transaction, <EM CLASS="Variable">
command</EM>
 is a string specifying the name of the command for which this definition should be invoked. It defaults to the capitalized print-name of <EM CLASS="Variable">
name</EM>
, with hyphens removed.</P>
<P CLASS="RBody">
<A NAME="pgfId-886390"></A>The <EM CLASS="Variable">
execute-arg-bindings</EM>
 are only used with execute transactions. They specify the arguments expected. <EM CLASS="Variable">
type-spec</EM>
 should be one of <CODE CLASS="Code">
t</CODE>
, <CODE CLASS="Code">
string</CODE>
, <CODE CLASS="Code">
number</CODE>
, <CODE CLASS="Code">
integer</CODE>
 or <CODE CLASS="Code">
float</CODE>
. If not specified, <CODE CLASS="Code">
t</CODE>
 is assumed.</P>
<P CLASS="RBody">
<A NAME="pgfId-886394"></A>The <EM CLASS="Variable">
var-bindings</EM>
 may appear anywhere in the binding list, and in any order. Binding variables to <CODE CLASS="Code">
:server</CODE>
 and <CODE CLASS="Code">
:topic</CODE>
 is useful with all transaction types. A <CODE CLASS="Code">
:server</CODE>
 binding causes the variable to be bound to the server object, whereas a <CODE CLASS="Code">
:topic</CODE>
 binding causes the variable to be bound to the topic object. This allows the server and/or the topic to be referred to in the body of the function.</P>
<P CLASS="RBody">
<A NAME="pgfId-886399"></A>A <CODE CLASS="Code">
:format</CODE>
 binding can only be used with request and poke transactions, where an <EM CLASS="Variable">
option</EM>
 of <CODE CLASS="Code">
:format :all</CODE>
 has been specified. It causes the variable specified by <EM CLASS="Variable">
var</EM>
 to be bound to the format of data requested or supplied. The body of the defined function should fail the transaction if it does not support the requested format.</P>
<P CLASS="RBody">
<A NAME="pgfId-886404"></A>A <CODE CLASS="Code">
:data</CODE>
 binding can only be used with poke transactions. It binds a variable to the data to be poked. For text transfers, the data variable is normally bound to a string. However, if <EM CLASS="Variable">
data-type</EM>
 is specified as <CODE CLASS="Code">
:string-list</CODE>
, the data in the transaction is interpreted as a tab-separated list of strings, and the data variable is bound to a list of strings.</P>
<P CLASS="RBody">
<A NAME="pgfId-886411"></A>For execute and poke transactions, the body of the defined function is expected to return t for success and <CODE CLASS="Code">
nil</CODE>
 for failure.</P>
<P CLASS="RBody">
<A NAME="pgfId-886414"></A>For request transactions, the body of the defined function is normally expected to return a result value, or <CODE CLASS="Code">
nil</CODE>
 for failure.</P>
<P CLASS="RBody">
<A NAME="pgfId-886417"></A>The <EM CLASS="Variable">
result-type</EM>
 option may only be specified for request transactions. If it is specified as <CODE CLASS="Code">
:string-list</CODE>
, then for text requests the body is expected to return a list of strings, which are used to create a tab-separated list to be returned to the client.</P>
<P CLASS="RBody">
<A NAME="pgfId-886422"></A>Sometimes, it may be necessary to support returning <CODE CLASS="Code">
nil</CODE>
 to mean the empty list, rather than failure. In this case, the <EM CLASS="Variable">
result-type</EM>
 can be specified as <CODE CLASS="Code">
(:string-list t)</CODE>
. The body is then expected to return two values: a list of strings, and a flag indicating success.</P>
<P CLASS="RBody">
<A NAME="pgfId-886427"></A>In the case of execute transactions, the command name and arguments are unmarshalled by the default argument unmarshalling. This is compatible with the default argument unmarshalling described under <A HREF="lw-1495.htm#13766" CLASS="XRef">dde-execute-command</A>. The execute string is expected to be of the following syntax:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-886433"></A> [command1(arg1,arg2,...)][command2(arg1,arg2,...)]...]</CODE>
<P CLASS="RBody">
<A NAME="pgfId-886435"></A>Note that multiple commands may be packed into a single execute transaction. However, <CODE CLASS="Code">
dde-execute-command</CODE>
 does not currently generate such strings.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-912482"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-912484"></A><A HREF="lw-1495.htm#13766" CLASS="XRef">dde-execute-command</A><BR>
<A HREF="lw-1505.htm#34026" CLASS="XRef">define-dde-client</A><BR>
<A HREF="lw-1515.htm#36921" CLASS="XRef">define-dde-dispatch-topic</A><BR>
<A HREF="lw-1516.htm#24983" CLASS="XRef">define-dde-server</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-1518.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-1516.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-1507.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
