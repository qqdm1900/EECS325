<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 21.6.5  Socket Stream SSL keyword arguments
</TITLE>

<LINK REL="next" HREF="lw-476.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-474.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-466.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-457.htm">21 TCP/IP socket communication and SSL</A> &gt; <A HREF="lw-466.htm">21.6  Socket Stream SSL interface</A><BR><BR>
</DIV><A HREF="lw-476.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-474.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-466.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM2Heading">
<A NAME="pgfId-889486"></A>21.6.5  <A NAME="69740"></A>Socket Stream SSL keyword arguments</H3>
<P CLASS="Body">
<A NAME="pgfId-889488"></A>The keyword arguments <CODE CLASS="Code">
:ssl-ctx</CODE>
, <CODE CLASS="Code">
:ssl-side</CODE>
, <CODE CLASS="Code">
:ctx-configure-callback</CODE>
 and <CODE CLASS="Code">
:ssl-configure-callback</CODE>
 can be be passed to create and configure socket streams with SSL processing. The various methods for creating and configuring SSL streams accept these keyword arguments as shown in <A HREF="lw-475.htm#21190" CLASS="XRef">SSL configuration keywords</A>.</P>
<P CLASS="Body">
<A NAME="pgfId-890509"></A>&nbsp;</P>
<TABLE BORDER="1">
<CAPTION>
<H6 CLASS="Table">
<A NAME="pgfId-890512"></A>SSL configuration keywords<A NAME="21190"></A><DIV>
<IMG SRC="lw-29.gif">
</DIV>
</H6>
</CAPTION>
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId-890522"></A>&nbsp;</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId-890524"></A><CODE CLASS="Code">
:ssl-ctx</CODE>
</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId-890526"></A><CODE CLASS="Code">
:ssl-side</CODE>
</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId-890528"></A><CODE CLASS="Code">
:ctx-configure-callback</CODE>
</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId-890593"></A><CODE CLASS="Code">
:ssl-configure-callback</CODE>
</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890616"></A><CODE CLASS="Code">
</CODE>
<A NAME="marker-892945"></A><A HREF="lw-609.htm#32260" CLASS="XRef">socket-stream</A><CODE CLASS="Code">
 make-instance</CODE>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890534"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890536"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890538"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890540"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890635"></A><CODE CLASS="Code">
</CODE>
<A NAME="marker-892923"></A><A HREF="lw-597.htm#15026" CLASS="XRef">open-tcp-stream</A></P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890641"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890647"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890653"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890659"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890552"></A><CODE CLASS="Code">
</CODE>
<A NAME="marker-892928"></A><A HREF="lw-580.htm#92293" CLASS="XRef">attach-ssl</A></P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890680"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890686"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890692"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890698"></A>Yes</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890714"></A><CODE CLASS="Code">
</CODE>
<A NAME="marker-892933"></A><A HREF="lw-596.htm#88348" CLASS="XRef">make-ssl-ctx</A></P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890564"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890566"></A>Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890568"></A>No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId-890570"></A>No</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-889494"></A><CODE CLASS="Code">
(make-instance 'socket-stream ...)</CODE>
 and <A HREF="lw-597.htm#15026" CLASS="XRef">open-tcp-stream</A>, when <EM CLASS="Variable">
ssl-ctx</EM>
 is non-nil, call <A HREF="lw-580.htm#92293" CLASS="XRef">attach-ssl</A> and pass it all the arguments.</P>
<P CLASS="Body">
<A NAME="pgfId-889496"></A><CODE CLASS="Code">
:ssl-ctx</CODE>
 specifies that SSL should be used, and also specifies the SSL_CTX object to use. See the OpenSSL manual entry for SSL_CTX_new for details of making a SSL_CTX. The value of <EM CLASS="Variable">
ssl-ctx</EM>
 can be:</P>
<P CLASS="Description-Item">
<A NAME="pgfId-890819"></A>A symbol</P>
<P CLASS="Description-C">Together with <EM CLASS="Variable">
ssl-side</EM>
, this symbol specifies which protocol to use. <EM CLASS="Variable">
ssl-ctx</EM>
 can be one of:<BR>
<BR>
1) <CODE CLASS="Code">
t</CODE>
 or <CODE CLASS="Code">
:default</CODE>
, meaning use the default. Currently this is the same as <CODE CLASS="Code">
:v23</CODE>
.<BR>
<BR>
2) One of <CODE CLASS="Code">
:v2</CODE>
, <CODE CLASS="Code">
:v3</CODE>
, <CODE CLASS="Code">
:v23</CODE>
 or <CODE CLASS="Code">
:tls-v1</CODE>
. These are mapped to the SSLv2_*, SSLv3_*, SSLv23_*, TLSv1_* methods.<BR>
<BR>
LispWorks makes a new SSL_CTX object and uses it and frees it when the stream is closed. <A HREF="lw-655.htm#39152" CLASS="XRef">make-instance</A>, <A HREF="lw-580.htm#92293" CLASS="XRef">attach-ssl</A> and <A HREF="lw-597.htm#15026" CLASS="XRef">open-tcp-stream</A> also make an SSL object, use it and free it when the stream is closed.</P>
<P CLASS="Description">
<A NAME="pgfId-889501"></A>A foreign pointer of type <CODE CLASS="Code">
<A HREF="lw-618.htm#89480" CLASS="XRef">ssl-ctx-pointer</A></CODE>
</P>
<P CLASS="Description-C">
<A NAME="pgfId-890861"></A>This corresponds to the C type SSL_CTX*. This is used and is not freed when the stream is closed. <A HREF="lw-655.htm#39152" CLASS="XRef">make-instance</A>, <A HREF="lw-580.htm#92293" CLASS="XRef">attach-ssl</A> and <A HREF="lw-597.htm#15026" CLASS="XRef">open-tcp-stream</A> also make an SSL object, use it and free it when the stream is closed. The foreign pointer maybe a result of a call to <CODE CLASS="Code">
</CODE>
<A NAME="marker-893179"></A><A HREF="lw-596.htm#88348" CLASS="XRef">make-ssl-ctx</A>, but it can also be a result of your code, provided that it points to a valid SSL_CTX and has the type <CODE CLASS="Code">
<A HREF="lw-618.htm#89480" CLASS="XRef">ssl-ctx-pointer</A></CODE>
. </P>
<P CLASS="Description">
<A NAME="pgfId-889502"></A>A foreign pointer of type <CODE CLASS="Code">
<A HREF="lw-622.htm#94102" CLASS="XRef">ssl-pointer</A></CODE>
</P>
<P CLASS="Description-C">
<A NAME="pgfId-907878"></A>This corresponds to the C type SSL*. This specifies the SSL to use in <A HREF="lw-655.htm#39152" CLASS="XRef">make-instance</A>, <A HREF="lw-580.htm#92293" CLASS="XRef">attach-ssl</A> and <A HREF="lw-597.htm#15026" CLASS="XRef">open-tcp-stream</A>. This maybe a result of a call to <CODE CLASS="Code">
ssl-new</CODE>
. but can also be a result of your code, provided that it points to a valid SSL object and has the type <CODE CLASS="Code">
<A HREF="lw-622.htm#94102" CLASS="XRef">ssl-pointer</A></CODE>
. The SSL is used and is not freed when the stream is closed.</P>
<P CLASS="Body">
<A NAME="pgfId-889504"></A>When you pass a <CODE CLASS="Code">
<A HREF="lw-618.htm#89480" CLASS="XRef">ssl-ctx-pointer</A></CODE>
 or a <CODE CLASS="Code">
<A HREF="lw-622.htm#94102" CLASS="XRef">ssl-pointer</A></CODE>
 foreign pointer, these must have already been set up correctly.</P>
<P CLASS="Body">
<A NAME="pgfId-889506"></A><CODE CLASS="Code">
:ssl-side</CODE>
 specifies which side the stream is. The value <EM CLASS="Variable">
ssl-side</EM>
 can be one of <CODE CLASS="Code">
:client</CODE>
, <CODE CLASS="Code">
:server</CODE>
 or <CODE CLASS="Code">
:both</CODE>
. <A HREF="lw-597.htm#15026" CLASS="XRef">open-tcp-stream</A> does not take this keyword and always uses <CODE CLASS="Code">
:client</CODE>
. For the other calls this argument defaults to <CODE CLASS="Code">
:server</CODE>
. The value of <EM CLASS="Variable">
ssl-side</EM>
 is used in two cases:</P>
<P CLASS="Description">
<A NAME="pgfId-889507"></A>When a new SSL_CTX object is created, it is used to select the method:</P>
<P CLASS="Description-C">
<A NAME="pgfId-889508"></A>  <CODE CLASS="Code">
:client</CODE>
 =&gt; *_client_method</P>
<P CLASS="Description-C">
<A NAME="pgfId-889509"></A>  <CODE CLASS="Code">
:server</CODE>
 =&gt; *_server_method</P>
<P CLASS="Description-C">
<A NAME="pgfId-889510"></A>  <CODE CLASS="Code">
:both</CODE>
   =&gt; *_method</P>
<P CLASS="Body">
<A NAME="pgfId-908046"></A>When a new SSL object is created, when <EM CLASS="Variable">
ssl-side</EM>
 is either <CODE CLASS="Code">
:client</CODE>
 or <CODE CLASS="Code">
:server</CODE>
, LispWorks calls <CODE CLASS="Code">
ssl-set-connect-state</CODE>
<A NAME="marker-908047"></A> or <CODE CLASS="Code">
ssl-set-accept-state</CODE>
<A NAME="marker-908048"></A> respectively.</P>
<P CLASS="Body">
<A NAME="pgfId-889512"></A>If the value of <EM CLASS="Variable">
ssl-ctx</EM>
 is a <CODE CLASS="Code">
<A HREF="lw-622.htm#94102" CLASS="XRef">ssl-pointer</A></CODE>
, <EM CLASS="Variable">
ssl-side</EM>
 is ignored.</P>
<P CLASS="Body">
<A NAME="pgfId-889514"></A><CODE CLASS="Code">
:ctx-configure-callback</CODE>
 specifies a callback, a function which takes a foreign pointer of type <CODE CLASS="Code">
<A HREF="lw-618.htm#89480" CLASS="XRef">ssl-ctx-pointer</A></CODE>
. This is called immediately after a new SSL_CTX is created. If the value of <EM CLASS="Variable">
ssl-ctx</EM>
 is not a symbol, <EM CLASS="Variable">
ctx-configure-callback</EM>
 is ignored.</P>
<P CLASS="Body">
<A NAME="pgfId-889516"></A><CODE CLASS="Code">
:ssl-configure-callback</CODE>
 specifies a callback, a function which taks a foreign pointer of type <CODE CLASS="Code">
<A HREF="lw-622.htm#94102" CLASS="XRef">ssl-pointer</A></CODE>
. This is called immediately after a new SSL is created. If the value of <EM CLASS="Variable">
ssl-ctx</EM>
 is not a <EM CLASS="Variable">
ssl-pointer</EM>
, <EM CLASS="Variable">
ssl-configure-callback</EM>
 is ignored.</P>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-476.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-474.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-466.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
