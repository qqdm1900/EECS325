<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 ora-lob-get-buffer
</TITLE>

<LINK REL="next" HREF="lw-1228.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-1226.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-1155.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-1155.htm">38 The SQL Package</A><BR><BR>
</DIV><A HREF="lw-1228.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-1226.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-1155.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-1187625"></A><A NAME="34086"></A>ora<A NAME="marker-1187624"></A>-lob-get-buffer</H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-1187626"></A>Function</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187627"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-1191254"></A>Gets a buffer for efficient I/O with foreign functions.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187629"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1187630"></A>sql</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187631"></A>Signature</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1187632"></A>ora-lob-get-buffer <EM CLASS="Variable">
lob-locator</EM>
 &amp;key <EM CLASS="Variable">
for-writing</EM>
 <EM CLASS="Variable">
offset</EM>
 =&gt; <EM CLASS="Variable">
amount/size</EM>
, <EM CLASS="Variable">
foreign-buffer</EM>
, <EM CLASS="Variable">
eof-or-error-p</EM>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187633"></A>Arguments</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1187634"></A><EM CLASS="Variable">
lob-locator</EM>
</P>
<P CLASS="RDescription-C">A LOB locator.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1191349"></A><EM CLASS="Variable">
for-writing</EM>
</P>
<P CLASS="RDescription-C">A generalized boolean.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1187635"></A><EM CLASS="Variable">
offset</EM>
</P>
<P CLASS="RDescription-C">A non-negative integer or <CODE CLASS="Code">
nil</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187640"></A>Values</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1187641"></A><EM CLASS="Variable">
amount/size</EM>
</P>
<P CLASS="RDescription-C">A non-negative integer.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1192657"></A><EM CLASS="Variable">
foreign-buffer</EM>
</P>
<P CLASS="RDescription-C">A FLI pointer.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1187642"></A><EM CLASS="Variable">
eof-or-error-p</EM>
</P>
<P CLASS="RDescription-C">A boolean or an error object.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187643"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-1190998"></A>The function <CODE CLASS="Code">
ora-lob-get-buffer</CODE>
 gets a buffer for efficient I/O with foreign functions.</P>
<P CLASS="RBody">
<A NAME="pgfId-1190999"></A>If <EM CLASS="Variable">
for-writing</EM>
 is <CODE CLASS="Code">
nil</CODE>
, then <CODE CLASS="Code">
ora-lob-get-buffer</CODE>
 fills an internal buffer and returns three values: <EM CLASS="Variable">
amount/size</EM>
 is how much it filled, <EM CLASS="Variable">
foreign-buffer</EM>
 points to the actual buffer, and <EM CLASS="Variable">
eof-or-error-p</EM>
 is the return value from the call to <A HREF="lw-1240.htm#73032" CLASS="XRef">ora-lob-read-foreign-buffer</A>. The offset <EM CLASS="Variable">
offset</EM>
 is passed directly <A HREF="lw-1240.htm#73032" CLASS="XRef">ora-lob-read-foreign-buffer</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-1191000"></A>If <EM CLASS="Variable">
for-writing</EM>
 is true, then <CODE CLASS="Code">
ora-lob-get-buffer</CODE>
 returns two values: <EM CLASS="Variable">
amount/size</EM>
 is the size of the foreign buffer and <EM CLASS="Variable">
foreign-buffer</EM>
 points to the actual buffer, which then can be passed to <A HREF="lw-1245.htm#72707" CLASS="XRef">ora-lob-write-foreign-buffer</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-1193627"></A>The default value of <EM CLASS="Variable">
for-writing</EM>
 is <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1187644"></A>The buffer that is used by <CODE CLASS="Code">
ora-lob-get-buffer</CODE>
 is always the same for the LOB locator, it is used by <A HREF="lw-1238.htm#19337" CLASS="XRef">ora-lob-read-buffer</A> and <A HREF="lw-1243.htm#66066" CLASS="XRef">ora-lob-write-buffer</A>, and is freed automatically when the LOB locator is freed. Thus until you finish with the buffer, you cannot use <A HREF="lw-1238.htm#19337" CLASS="XRef">ora-lob-read-buffer</A> or <A HREF="lw-1243.htm#66066" CLASS="XRef">ora-lob-write-buffer</A> or call <A HREF="lw-1227.htm#34086" CLASS="XRef">ora-lob-get-buffer</A> again or free the LOB locator.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187657"></A>Notes</H5>
<P CLASS="RBody">
<A NAME="pgfId-1568871"></A><CODE CLASS="Code">
ora-lob-get-buffer</CODE>
 is available only when the &quot;oracle&quot; module is loaded. See the section <A HREF="lw-424.htm#Oracle LOB interface;Oracle locator objects;Oracle large objects " CLASS="XRef">Oracle LOB interface</A> for more information.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187661"></A>Example</H5>
<P CLASS="RBody">
<A NAME="pgfId-1192722"></A>This first example illustrates reading using the buffer obtained by <CODE CLASS="Code">
ora-lob-get-buffer</CODE>
. You have a foreign function:</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-1192723"></A>my_chunk_processor(char *data, int size)</CODE>
<P CLASS="RBody">
<A NAME="pgfId-1192725"></A>with this FLI definition:</P>
<PRE CLASS="RCode-first"><A NAME="pgfId-1193848"></A>(fli:define-foreign-function my_chunk_processor</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192726"></A>    ((data :pointer)</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-1192727"></A>     (size :int)))</PRE>
<P CLASS="RBody">
<A NAME="pgfId-1192729"></A>You can pass all the data from the LOB locator to this function. Assuming no other function reads from it, it will start from the beginning.</P>
<PRE CLASS="RCode-first"><A NAME="pgfId-1192731"></A>(loop</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192732"></A> (multiple-value-bind (amount buffer eof-or-error-p)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192733"></A>     (ora-lob-get-buffer lob)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192734"></A>   (when (zerop amount) (return))</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-1192735"></A>   (my_chunk_processor buffer amount ))</PRE>
<P CLASS="RBody">
<A NAME="pgfId-1192737"></A>This second example illustrates writing with the buffer obtained by <CODE CLASS="Code">
ora-lob-get-buffer</CODE>
. You have a foreign function that fills a buffer with data, and you want to write it to a LOB. First you should lock the record, and if required trim the LOB locator.</P>
<PRE CLASS="RCode-first"><A NAME="pgfId-1192741"></A>(multiple-value-bind (size buffer)</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192742"></A>    (ora-lob-get-buffer lob-locator</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192743"></A>                        :for-writing t</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192744"></A>                        ;; start at the beginning</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192745"></A>                        :offset 1)    </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192746"></A>  (loop (let ((amount (my-fill-buffer buffer size)))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192747"></A>          (when (zerop amount) (return))</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192748"></A>          (ora-lob-write-foreign-buffer </PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-1192749"></A>           lob-locator nil</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-1192750"></A>           amount buffer size))))</PRE>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1187677"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-1187681"></A><A HREF="lw-1238.htm#19337" CLASS="XRef">ora-lob-read-buffer</A><BR>
<A HREF="lw-1240.htm#73032" CLASS="XRef">ora-lob-read-foreign-buffer</A><BR>
<A HREF="lw-1243.htm#66066" CLASS="XRef">ora-lob-write-buffer</A><BR>
<A HREF="lw-1245.htm#72707" CLASS="XRef">ora-lob-write-foreign-buffer</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-1228.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-1226.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-1155.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
