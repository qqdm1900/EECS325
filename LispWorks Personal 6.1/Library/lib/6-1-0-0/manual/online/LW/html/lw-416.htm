<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="lw.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 19.9.6.2  Aborting queries which fetch many records
</TITLE>

<LINK REL="next" HREF="lw-417.htm" TYPE="text/html">
<LINK REL="prev" HREF="lw-415.htm" TYPE="text/html">
<LINK REL="up" HREF="lw-414.htm" TYPE="text/html">
<LINK REL="top" HREF="lw.htm" TYPE="text/html">
<LINK REL="contents" HREF="lw-2.htm" TYPE="text/html">
<LINK REL="index" HREF="lw-1525.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="lw.htm">LispWorks User Guide and Reference Manual</A> &gt; <A HREF="lw-343.htm">19 Common SQL</A> &gt; <A HREF="lw-408.htm">19.9  Using MySQL</A> &gt; <A HREF="lw-414.htm">19.9.6  Special considerations for iteration functions and macros</A><BR><BR>
</DIV><A HREF="lw-417.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-415.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-414.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM3Heading">
<A NAME="pgfId-909151"></A>19.9.6.2  Aborting queries which fetch many records</H3>
<P CLASS="Body">
<A NAME="pgfId-909202"></A>In the MySQL interface there is no way to abort a query when part way through it. When any of the iterations above stops before reaching its end, the underlying code retrieves all the records to the end of the query (though without converting them to Lisp objects). If the query found many records, that may be an expensive (that is, time consuming) operation.</P>
<P CLASS="Body">
<A NAME="pgfId-909216"></A>It is possible to avoid this inefficiency by passing the argument <EM CLASS="Variable">
not-inside-transaction</EM>
. If <EM CLASS="Variable">
not-inside-transaction</EM>
 is true then when a query is aborted, then LispWorks closes the database connection and reopens it, rather than retrieving all the remaining records.</P>
<PRE CLASS="Code-first"><A NAME="pgfId-909249"></A>(sql:map-query nil 'print </PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-909250"></A>               &quot;select forname,surname from people&quot;</PRE>
<PRE CLASS="Code-body"><A NAME="pgfId-909251"></A>               :get-all t</PRE>
<PRE CLASS="Code-last"><A NAME="pgfId-909243"></A>               :not-inside-transaction t)</PRE>
<P CLASS="Body">
<A NAME="pgfId-909236"></A>Note that this will lose any state associated with the connection, and so <EM CLASS="Variable">
not-inside-transaction</EM>
 should only be used with care.</P>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks User Guide and Reference Manual - 21 Dec 2011</I></P>
<P><A HREF="lw-417.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="lw-415.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="lw-414.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="lw.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="lw-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="lw-1525.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
