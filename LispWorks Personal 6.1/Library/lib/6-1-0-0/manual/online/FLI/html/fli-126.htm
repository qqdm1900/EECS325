<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="fli.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 make-pointer
</TITLE>

<LINK REL="next" HREF="fli-127.htm" TYPE="text/html">
<LINK REL="prev" HREF="fli-125.htm" TYPE="text/html">
<LINK REL="up" HREF="fli-70.htm" TYPE="text/html">
<LINK REL="top" HREF="fli.htm" TYPE="text/html">
<LINK REL="contents" HREF="fli-2.htm" TYPE="text/html">
<LINK REL="index" HREF="fli-216.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="fli.htm">LispWorks Foreign Language Interface User Guide and Reference Manual</A> &gt; <A HREF="fli-70.htm">5 Function and Macro Reference</A><BR><BR>
</DIV><A HREF="fli-127.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="fli-125.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="fli-70.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="fli.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="fli-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="fli-216.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-897610"></A><A NAME="29578"></A>make-pointer<A NAME="marker-998695"></A></H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-897611"></A>Function</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-898527"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-937837"></A>Creates a pointer to a specified address.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-937796"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-898528"></A>fli</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-897612"></A>Signature</H5>
<P CLASS="RSignature">
<A NAME="pgfId-897613"></A>make-pointer &amp;key <EM CLASS="Variable">
address</EM>
 <EM CLASS="Variable">
type</EM>
 <EM CLASS="Variable">
pointer-type</EM>
 <EM CLASS="Variable">
symbol-name</EM>
 <EM CLASS="Variable">
functionp</EM>
 <EM CLASS="Variable">
module</EM>
 <EM CLASS="Variable">
encoding</EM>
 =&gt; <EM CLASS="Variable">
pointer</EM>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-919620"></A>Arguments</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-919621"></A><EM CLASS="Variable">
address</EM>
</P>
<P CLASS="RDescription-C">The address pointed to by the pointer to be created.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-928149"></A><EM CLASS="Variable">
type</EM>
</P>
<P CLASS="RDescription-C">The type of the object pointed to by the pointer to be created.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-928154"></A><EM CLASS="Variable">
pointer-type</EM>
</P>
<P CLASS="RDescription-C">The type of the pointer to be made.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-928159"></A><EM CLASS="Variable">
symbol-name</EM>
</P>
<P CLASS="RDescription-C">A string or a symbol.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1121003"></A><EM CLASS="Variable">
functionp</EM>
</P>
<P CLASS="RDescription-C">If <EM CLASS="Variable">
type</EM>
 or <EM CLASS="Variable">
pointer-type</EM>
 are not specified, then <EM CLASS="Variable">
functionp</EM>
 can be used.</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-1121004"></A>If <CODE CLASS="Code">
t</CODE>
, the pointer made is a pointer to type <CODE CLASS="Code">
:function</CODE>
. This is the default value.</P>
<P CLASS="RDescription-C">
<A NAME="pgfId-1233909"></A>If <CODE CLASS="Code">
nil</CODE>
, the pointer made is a pointer to type <CODE CLASS="Code">
:void</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1233910"></A><EM CLASS="Variable">
module</EM>
</P>
<P CLASS="RDescription-C">A symbol or string naming a module, or <CODE CLASS="Code">
nil</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1324576"></A><EM CLASS="Variable">
encoding</EM>
</P>
<P CLASS="RDescription-C">One of <CODE CLASS="Code">
:source</CODE>
, <CODE CLASS="Code">
:object</CODE>
, <CODE CLASS="Code">
:lisp</CODE>
 or <CODE CLASS="Code">
:dbcs</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-919622"></A>Values</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-919623"></A><EM CLASS="Variable">
pointer</EM>
</P>
<P CLASS="RDescription-C">A pointer to <EM CLASS="Variable">
address</EM>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-919624"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-919625"></A>The function <CODE CLASS="Code">
make-pointer</CODE>
 creates a pointer of a specified type pointing to a given address, or optionally to a function or foreign callable.</P>
<P CLASS="RBody">
<A NAME="pgfId-1237220"></A><EM CLASS="Variable">
symbol-name</EM>
 is either a string containing the name of a foreign symbol defined in a DLL, or a string or symbol naming a foreign callable defined by <A HREF="fli-90.htm#25590" CLASS="XRef">define-foreign-callable</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-1321531"></A><EM CLASS="Variable">
encoding</EM>
 controls how <EM CLASS="Variable">
symbol-name</EM>
 is processed. The values are interpreted like the <EM CLASS="Variable">
encode</EM>
 argument of  <A HREF="fli-90.htm#25590" CLASS="XRef">define-foreign-callable</A>. The default value of <EM CLASS="Variable">
encoding</EM>
 is <CODE CLASS="Code">
:source</CODE>
 if <EM CLASS="Variable">
symbol-name</EM>
 is a string and <CODE CLASS="Code">
:lisp</CODE>
 if <EM CLASS="Variable">
symbol-name</EM>
 is a symbol.</P>
<P CLASS="RBody">
<A NAME="pgfId-1236714"></A>In the case of a pointer to a foreign callable or foreign function, the <EM CLASS="Variable">
module</EM>
 keyword can be used to ensure that the pointer points to the function in the correct DLL if there are other DLLs containing functions with the same name. <EM CLASS="Variable">
module</EM>
 is processed as by <A HREF="fli-94.htm#27849" CLASS="XRef">define-foreign-function</A>.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-919626"></A>Example</H5>
<P CLASS="RBody">
<A NAME="pgfId-919627"></A>In the following example a module is defined, and the variable <CODE CLASS="Code">
setpoint</CODE>
 is set equal to a pointer to a function in the module.</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-938853"></A>(fli:register-module :user-dll :real-name &quot;user32&quot;)</CODE>
<PRE CLASS="RCode-first"><A NAME="pgfId-938629"></A>(setq setpoint</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-939011"></A>      (fli:make-pointer :symbol-name &quot;SetCursorPos&quot;</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-938604"></A>                        :module :user-dll)</PRE>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-919628"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-919629"></A><A HREF="fli-82.htm#16376" CLASS="XRef">copy-pointer</A><BR>
<A HREF="fli-90.htm#25590" CLASS="XRef">define-foreign-callable</A><BR>
<A HREF="fli-140.htm#30636" CLASS="XRef">register-module</A><BR>
<A HREF="fli-148.htm#26364" CLASS="XRef">with-coerced-pointer</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks Foreign Language Interface User Guide and Reference Manual - 7 Dec 2011</I></P>
<P><A HREF="fli-127.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="fli-125.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="fli-70.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="fli.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="fli-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="fli-216.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
