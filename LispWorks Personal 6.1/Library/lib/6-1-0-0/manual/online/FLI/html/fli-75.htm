<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="fli.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 allocate-foreign-object
</TITLE>

<LINK REL="next" HREF="fli-76.htm" TYPE="text/html">
<LINK REL="prev" HREF="fli-74.htm" TYPE="text/html">
<LINK REL="up" HREF="fli-70.htm" TYPE="text/html">
<LINK REL="top" HREF="fli.htm" TYPE="text/html">
<LINK REL="contents" HREF="fli-2.htm" TYPE="text/html">
<LINK REL="index" HREF="fli-216.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="fli.htm">LispWorks Foreign Language Interface User Guide and Reference Manual</A> &gt; <A HREF="fli-70.htm">5 Function and Macro Reference</A><BR><BR>
</DIV><A HREF="fli-76.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="fli-74.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="fli-70.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="fli.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="fli-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="fli-216.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-1565591"></A><A NAME="29510"></A>allocate-foreign-object<A NAME="marker-1565590"></A></H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-895950"></A>Function</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-898009"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-912130"></A>Allocates memory for an instance of a foreign object.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-911916"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-898010"></A>fli</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-895951"></A>Signature</H5>
<P CLASS="RSignature">
<A NAME="pgfId-895952"></A>allocate-foreign-object &amp;key <EM CLASS="Variable">
type</EM>
 <EM CLASS="Variable">
pointer-type</EM>
 <EM CLASS="Variable">
initial-element</EM>
 <EM CLASS="Variable">
initial-contents</EM>
 <EM CLASS="Variable">
fill</EM>
 <EM CLASS="Variable">
nelems</EM>
 <EM CLASS="Variable">
size-slot</EM>
 =&gt; <EM CLASS="Variable">
pointer</EM>
</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-899366"></A>Arguments</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-899266"></A><EM CLASS="Variable">
type</EM>
</P>
<P CLASS="RDescription-C">a FLI type specifying the type of the object to be allocated. If <EM CLASS="Variable">
type</EM>
 is supplied, <EM CLASS="Variable">
pointer-type</EM>
 must not be supplied.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-899267"></A><EM CLASS="Variable">
pointer-type</EM>
</P>
<P CLASS="RDescription-C">A FLI pointer type specifying the type of the pointer object to be allocated. If <EM CLASS="Variable">
pointer-type</EM>
 is supplied, <EM CLASS="Variable">
type</EM>
 must not be supplied.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-899268"></A><EM CLASS="Variable">
initial-element</EM>
</P>
<P CLASS="RDescription-C">A keyword setting the initial value of every element in the newly allocated object to <EM CLASS="Variable">
initial-element</EM>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-899269"></A><EM CLASS="Variable">
initial-contents</EM>
</P>
<P CLASS="RDescription-C">A list of forms which initialize the contents of each element in the newly allocated object.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1317977"></A><EM CLASS="Variable">
fill</EM>
</P>
<P CLASS="RDescription-C">An integer between 0 to 255.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-900025"></A><EM CLASS="Variable">
nelems</EM>
</P>
<P CLASS="RDescription-C">An integer specifying how many copies of the object should be allocated. The default value is 1.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1317837"></A><EM CLASS="Variable">
size-slot</EM>
</P>
<P CLASS="RDescription-C">A symbol naming a slot in the object.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1544560"></A><A NAME="marker-1544599"></A><EM CLASS="Variable">
allocation</EM>
</P>
<P CLASS="RDescription-C">A keyword, either <CODE CLASS="Code">
:dynamic</CODE>
 or <CODE CLASS="Code">
:static</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-901657"></A>Values</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-901771"></A><EM CLASS="Variable">
pointer</P>
<P CLASS="RDescription-C"></EM>
A pointer to the specified <EM CLASS="Variable">
type</EM>
 or <EM CLASS="Variable">
pointer-type</EM>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-900091"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-1544604"></A>The function <CODE CLASS="Code">
allocate-foreign-object</CODE>
 allocates memory for a new instance of an object of type <EM CLASS="Variable">
type</EM>
 or an instance of a pointer object of type <EM CLASS="Variable">
pointer-type</EM>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1544606"></A>If <EM CLASS="Variable">
allocation</EM>
 is <CODE CLASS="Code">
:static</CODE>
 then memory is allocated in the C heap and must be explicitly freed using <A HREF="fli-119.htm#25051" CLASS="XRef">free-foreign-object</A> once the object is no longer needed.</P>
<P CLASS="RBody">
<A NAME="pgfId-1545928"></A><A NAME="marker-1546128"></A>If <EM CLASS="Variable">
allocation</EM>
 is <CODE CLASS="Code">
:dynamic</CODE>
, then <CODE CLASS="Code">
allocate-foreign-object</CODE>
 allocates memory for the object and pointer within the scope of the body of <A HREF="fli-149.htm#42568" CLASS="XRef">with-dynamic-foreign-objects</A>. This is equivalent to using <A HREF="fli-73.htm#10368" CLASS="XRef">allocate-dynamic-foreign-object</A>.</P>
<P CLASS="RBody">
<A NAME="pgfId-1545933"></A>The default value of <EM CLASS="Variable">
allocation</EM>
 is <CODE CLASS="Code">
:static</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1545743"></A>An integer value of <EM CLASS="Variable">
fill</EM>
 initializes all the bytes of the object. If <EM CLASS="Variable">
fill</EM>
 is not supplied, the object is not initialized unless <EM CLASS="Variable">
initial-element</EM>
 or <EM CLASS="Variable">
initial-contents</EM>
 is passed.</P>
<P CLASS="RBody">
<A NAME="pgfId-1318182"></A>A supplied value of <EM CLASS="Variable">
size-slot</EM>
 applies if the type is a struct or union type. The slot <EM CLASS="Variable">
size-slot</EM>
 is set to the size of the object in bytes. This occurs after the <EM CLASS="Variable">
fill</EM>
, <EM CLASS="Variable">
initial-element</EM>
 and <EM CLASS="Variable">
initial-contents</EM>
 arguments are processed. If <EM CLASS="Variable">
nelems</EM>
 is greater than 1, then the slot <EM CLASS="Variable">
size-slot</EM>
 is initialized in each element. If <EM CLASS="Variable">
size-slot</EM>
 is not supplied, then no such setting occurs.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1250417"></A>Notes</H5>
<P CLASS="RBody">
<A NAME="pgfId-1546004"></A>When <EM CLASS="Variable">
allocation</EM>
 is <CODE CLASS="Code">
:static</CODE>
, memory allocated by <CODE CLASS="Code">
allocate-foreign-object</CODE>
 is in the C heap. Therefore <EM CLASS="Variable">
pointer</EM>
 (and any copy) cannot be used after <CODE CLASS="Code">
save-image</CODE>
 or <CODE CLASS="Code">
deliver</CODE>
.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-903550"></A>Example</H5>
<P CLASS="RBody">
<A NAME="pgfId-904429"></A>In the following example a structure is defined and an instance with a specified initial value of 10 is created with memory allocated using <CODE CLASS="Code">
allocate-foreign-object</CODE>
. The <A HREF="fli-99.htm#29735" CLASS="XRef">dereference</A> function is then used to get the value that <CODE CLASS="Code">
point</CODE>
 points to, and finally it is freed.</P>
<CODE CLASS="RCode-line">
<A NAME="pgfId-905920"></A>(fli:define-c-typedef LONG :long)</CODE>
<PRE CLASS="RCode-first"><A NAME="pgfId-906046"></A>(setq point (fli:allocate-foreign-object</PRE>
<PRE CLASS="RCode-body"><A NAME="pgfId-906058"></A>             :type 'LONG</PRE>
<PRE CLASS="RCode-last"><A NAME="pgfId-906063"></A>             :initial-element 10))</PRE>
<CODE CLASS="RCode-line">
<A NAME="pgfId-906068"></A>(fli:dereference point)</CODE>
<CODE CLASS="RCode-line">
<A NAME="pgfId-1253973"></A>(fli:free-foreign-object point)</CODE>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1136236"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-1136240"></A><A HREF="fli-73.htm#10368" CLASS="XRef">allocate-dynamic-foreign-object</A><BR>
<A HREF="fli-119.htm#14842" CLASS="XRef">free-foreign-object</A><BR>
<A HREF="fli-33.htm#10848" CLASS="XRef">FLI Pointers</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks Foreign Language Interface User Guide and Reference Manual - 7 Dec 2011</I></P>
<P><A HREF="fli-76.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="fli-74.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="fli-70.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="fli.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="fli-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="fli-216.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
