<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="kwprolog-m.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 3.2.5  The Backward Chaining Interpreter
</TITLE>

<LINK REL="next" HREF="kwprolog-m-49.htm" TYPE="text/html">
<LINK REL="prev" HREF="kwprolog-m-47.htm" TYPE="text/html">
<LINK REL="up" HREF="kwprolog-m-42.htm" TYPE="text/html">
<LINK REL="top" HREF="kwprolog-m.htm" TYPE="text/html">
<LINK REL="contents" HREF="kwprolog-m-2.htm" TYPE="text/html">
<LINK REL="index" HREF="kwprolog-m-232.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="kwprolog-m.htm">KnowledgeWorks and Prolog User Guide</A> &gt; <A HREF="kwprolog-m-27.htm">3 Rules</A> &gt; <A HREF="kwprolog-m-42.htm">3.2  Backward Chaining</A><BR><BR>
</DIV><A HREF="kwprolog-m-49.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="kwprolog-m-47.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="kwprolog-m-42.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="kwprolog-m.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="kwprolog-m-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="kwprolog-m-232.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM2Heading">
<A NAME="pgfId-890048"></A>3.2.5  The <A NAME="marker-890047"></A>Backward Chaining Interpreter</H3>
<P CLASS="Body">
<A NAME="pgfId-890049"></A>The backward chaining interpreter can be invoked from Lisp by the following functions</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-890051"></A>(<A NAME="marker-890050"></A>any &lt;expr-to-instantiate&gt; &lt;expr-to-prove&gt;)</CODE>
<P CLASS="Body">
<A NAME="pgfId-890052"></A>which finds any solution to <CODE CLASS="Code">
&lt;expr-to-prove&gt;</CODE>
 and instantiates <CODE CLASS="Code">
&lt;expr-to-instantiate&gt;</CODE>
, and</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-890054"></A>(<A NAME="marker-890053"></A>findall &lt;expr-to-instantiate&gt; &lt;expr-to-prove&gt;)</CODE>
<P CLASS="Body">
<A NAME="pgfId-890055"></A>finds all the solutions to <CODE CLASS="Code">
&lt;expr-to-prove&gt;</CODE>
, instantiates <CODE CLASS="Code">
&lt;expr-to-instantiate&gt;</CODE>
 for each and returns these in a list.</P>
<P CLASS="Body">
<A NAME="pgfId-890056"></A>For other interface functions to be called from Lisp the reader is referred to <A HREF="kwprolog-m-168.htm#28050" CLASS="XRef">Common Prolog</A>.</P>
<P CLASS="Body">
<A NAME="pgfId-890061"></A>From the <A NAME="marker-890060"></A>action part of a forward chaining rule the backward chainer is called implicitly when a CLOS match or goal expression is used. The action part of forward chaining rules and the antecedents of backward chaining rules are syntactically and semantically identical.</P>
<H4 CLASS="FM3HeadingTOC">
<A HREF="kwprolog-m-49.htm#pgfId-890062" CLASS="Hypertext">3.2.5.1  Examples</A></H4>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">KnowledgeWorks and Prolog User Guide (Macintosh version) - 6 Dec 2011</I></P>
<P><A HREF="kwprolog-m-49.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="kwprolog-m-47.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="kwprolog-m-42.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="kwprolog-m.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="kwprolog-m-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="kwprolog-m-232.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
