<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="capiuser-m.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 1.3  The CAPI model
</TITLE>

<LINK REL="next" HREF="capiuser-m-8.htm" TYPE="text/html">
<LINK REL="prev" HREF="capiuser-m-6.htm" TYPE="text/html">
<LINK REL="up" HREF="capiuser-m-4.htm" TYPE="text/html">
<LINK REL="top" HREF="capiuser-m.htm" TYPE="text/html">
<LINK REL="contents" HREF="capiuser-m-2.htm" TYPE="text/html">
<LINK REL="index" HREF="capiuser-m-252.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt <A HREF="capiuser-m.htm">CAPI User Guide</A> &gt <A HREF="capiuser-m-4.htm">1 Introduction to the CAPI</A><BR><BR>
</DIV><A HREF="capiuser-m-8.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiuser-m-6.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiuser-m-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiuser-m.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiuser-m-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiuser-m-252.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM1Heading">
<A NAME="pgfId-884184"></A>1.3  The CAPI model</H3>
<P CLASS="Body">
<A NAME="pgfId-884185"></A>The CAPI provides an abstract hierarchy of classes which represent different sorts of window interface elements, along with functions for interacting with them. Instances of these classes represent window objects in an application, with their slots representing different aspects of the object, such as the text on a button, or the items on a menu. These instances are not actual window objects but provide a convenient representation of them for you. When you ask the CAPI to display your object, it creates a real window system object to represent it. This means that if you display a CAPI button, a real Windows button is created for it when running on Microsoft Windows, a real GTK+ button when running on GTK+, and a real Cocoa button when running on Cocoa.</P>
<P CLASS="Body">
<A NAME="pgfId-884186"></A>A different approach would have been to simulate the window objects and their look and feel. This approach is problematic. Because the library makes itself entirely responsible for the application's look and feel, it may not simulate it correctly in obscure cases. Also, manufacturers occasionally change the look and feel of their window systems. Applications written with a library that simulates window objects will continue to have the old look and feel until the application is recompiled with an updated library. </P>
<P CLASS="Body">
<A NAME="pgfId-884187"></A>The CAPI's approach makes the production of the screen objects the responsibility of the native window system, so it always produces the correct look and feel. Furthermore, the CAPI's use of the real interface to the window system means that it does not need to be upgraded to account for look and feel changes, and anything written with it is upwardly compatible, just like any well-written application. </P>
<H4 CLASS="FM2HeadingTOC">
<A HREF="capiuser-m-8.htm#pgfId-884188" CLASS="Hypertext">1.3.1  CAPI Classes </A></H4>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">CAPI User Guide (Macintosh version) - 30 Aug 2011</I></P>
<P><A HREF="capiuser-m-8.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="capiuser-m-6.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="capiuser-m-4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="capiuser-m.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="capiuser-m-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="capiuser-m-252.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
