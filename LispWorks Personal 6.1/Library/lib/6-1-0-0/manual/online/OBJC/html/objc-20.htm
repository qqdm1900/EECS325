<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="objc.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 1.3.10  Selectors
</TITLE>

<LINK REL="next" HREF="objc-21.htm" TYPE="text/html">
<LINK REL="prev" HREF="objc-19.htm" TYPE="text/html">
<LINK REL="up" HREF="objc-10.htm" TYPE="text/html">
<LINK REL="top" HREF="objc.htm" TYPE="text/html">
<LINK REL="contents" HREF="objc-2.htm" TYPE="text/html">
<LINK REL="index" HREF="objc-92.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="objc.htm">LispWorks Objective-C and Cocoa Interface User Guide and Reference Manual</A> &gt; <A HREF="objc-3.htm">1 Introduction to the Objective-C Interface</A> &gt; <A HREF="objc-10.htm">1.3  Invoking Objective-C methods</A><BR><BR>
</DIV><A HREF="objc-21.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="objc-19.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="objc-10.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="objc.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="objc-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="objc-92.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM2Heading">
<A NAME="pgfId-889103"></A>1.3.10  Selectors<A NAME="marker-892391"></A></H3>
<P CLASS="Body">
<A NAME="pgfId-888253"></A>Some Objective-C methods have arguments or values of type <CODE CLASS="Code">
SEL</CODE>
, which is a pointer type used to represent selectors. These can be used in Lisp as foreign pointers of type <A NAME="marker-891999"></A><A HREF="objc-67.htm#73578" CLASS="XRef">sel</A>, which can be obtained from a string by calling <A NAME="marker-892396"></A><A HREF="objc-38.htm#21345" CLASS="XRef">coerce-to-selector</A>. The function <A NAME="marker-892401"></A><A HREF="objc-68.htm#11233" CLASS="XRef">selector-name</A> can be used to find the name of a selector.</P>
<P CLASS="Body">
<A NAME="pgfId-889807"></A>For example, a call in Objective-C such as:</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-889825"></A>[foo <A NAME="marker-889824"></A>respondsToSelector:@selector(frame)]</CODE>
<P CLASS="Body">
<A NAME="pgfId-889829"></A>could be written using <A NAME="marker-892406"></A><A HREF="objc-36.htm#79215" CLASS="XRef">can-invoke-p</A> as in <A HREF="objc-18.htm#53035" CLASS="XRef">Determining whether a method exists</A> or using selectors as follows:</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-889830"></A>(invoke foo &quot;respondsToSelector:&quot; (coerce-to-selector &quot;frame&quot;))</CODE>
<P CLASS="Body">
<A NAME="pgfId-889850"></A>If <CODE CLASS="Code">
*selector*</CODE>
 is bound to the result of calling</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-893634"></A>(coerce-to-selector &quot;frame&quot;)</CODE>
<P CLASS="Body">
<A NAME="pgfId-893632"></A>then</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-889851"></A>(selector-name *selector*)</CODE>
<P CLASS="Body">
<A NAME="pgfId-889852"></A>will return the string <CODE CLASS="Code">
&quot;frame&quot;</CODE>
.</P>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks Objective-C and Cocoa Interface User Guide and Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="objc-21.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="objc-19.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="objc-10.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="objc.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="objc-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="objc-92.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
