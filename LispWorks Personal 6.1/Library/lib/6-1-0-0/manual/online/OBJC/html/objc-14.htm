<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="objc.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 1.3.4  Invoking a method that returns a boolean
</TITLE>

<LINK REL="next" HREF="objc-15.htm" TYPE="text/html">
<LINK REL="prev" HREF="objc-13.htm" TYPE="text/html">
<LINK REL="up" HREF="objc-10.htm" TYPE="text/html">
<LINK REL="top" HREF="objc.htm" TYPE="text/html">
<LINK REL="contents" HREF="objc-2.htm" TYPE="text/html">
<LINK REL="index" HREF="objc-92.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="objc.htm">LispWorks Objective-C and Cocoa Interface User Guide and Reference Manual</A> &gt; <A HREF="objc-3.htm">1 Introduction to the Objective-C Interface</A> &gt; <A HREF="objc-10.htm">1.3  Invoking Objective-C methods</A><BR><BR>
</DIV><A HREF="objc-15.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="objc-13.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="objc-10.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="objc.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="objc-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="objc-92.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM2Heading">
<A NAME="pgfId-887683"></A>1.3.4  <A NAME="41501"></A>Invoking a method that returns a boolean<A NAME="marker-892185"></A></H3>
<P CLASS="Body">
<A NAME="pgfId-887787"></A>When a method has return type <CODE CLASS="Code">
BOOL</CODE>
, the value is converted to the integer <CODE CLASS="Code">
0</CODE>
 or <CODE CLASS="Code">
1</CODE>
 because Objective-C cannot distinguish this type from the other integer types. Often it is more convenient to receive the value as a Lisp boolean and this can be done by using the function <A NAME="marker-892177"></A><A HREF="objc-48.htm#78367" CLASS="XRef">invoke-bool</A>, which returns <CODE CLASS="Code">
nil</CODE>
 or <CODE CLASS="Code">
t</CODE>
.</P>
<P CLASS="Body">
<A NAME="pgfId-888148"></A>For example, a call in Objective-C such as:</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-888149"></A>[box isSquare] ? 1 : 2</CODE>
<P CLASS="Body">
<A NAME="pgfId-888153"></A>could be written using <A HREF="objc-48.htm#78367" CLASS="XRef">invoke-bool</A> as:</P>
<CODE CLASS="Code-line">
<A NAME="pgfId-888463"></A>(if (invoke-bool box &quot;isSquare&quot;) 1 2)</CODE>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks Objective-C and Cocoa Interface User Guide and Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="objc-15.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="objc-13.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="objc-10.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="objc.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="objc-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="objc-92.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
