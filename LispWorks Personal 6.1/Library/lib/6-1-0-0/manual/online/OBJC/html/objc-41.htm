<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="objc.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 define-objc-class-method
</TITLE>

<LINK REL="next" HREF="objc-42.htm" TYPE="text/html">
<LINK REL="prev" HREF="objc-40.htm" TYPE="text/html">
<LINK REL="up" HREF="objc-33.htm" TYPE="text/html">
<LINK REL="top" HREF="objc.htm" TYPE="text/html">
<LINK REL="contents" HREF="objc-2.htm" TYPE="text/html">
<LINK REL="index" HREF="objc-92.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="objc.htm">LispWorks Objective-C and Cocoa Interface User Guide and Reference Manual</A> &gt; <A HREF="objc-33.htm">2 Objective-C Reference</A><BR><BR>
</DIV><A HREF="objc-42.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="objc-40.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="objc-33.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="objc.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="objc-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="objc-92.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H4 CLASS="REntry">
<A NAME="pgfId-1145865"></A><A NAME="10195"></A>define-objc-class-method<A NAME="marker-1145864"></A></H4>
<DIV>
<H5 CLASS="REntry-type">
<A NAME="pgfId-1145866"></A>Macro</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1145867"></A>Summary</H5>
<P CLASS="RBody">
<A NAME="pgfId-1145871"></A>Defines an Objective-C class method for a specified class.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1145872"></A>Package</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1145873"></A>objc</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1145874"></A>Signature</H5>
<P CLASS="RSignature">
<A NAME="pgfId-1145875"></A>define-objc-class-method (<EM CLASS="Variable">
name</EM>
 <EM CLASS="Variable">
result-type</EM>
 [<EM CLASS="Variable">
result-style</EM>
]) (<EM CLASS="Variable">
object-argspec</EM>
 <EM CLASS="Variable">
argspec</EM>
*) <EM CLASS="Variable">
form</EM>
*</P>
<P CLASS="RSignature">
<A NAME="pgfId-1145876"></A><EM CLASS="Variable">
object-argspec</EM>
 ::= (<EM CLASS="Variable">
object-var</EM>
 <EM CLASS="Variable">
class-name</EM>
 [<EM CLASS="Variable">
pointer-var</EM>
])</P>
<P CLASS="RSignature">
<A NAME="pgfId-1145877"></A><EM CLASS="Variable">
argspec</EM>
 ::= (<EM CLASS="Variable">
arg-var</EM>
 <EM CLASS="Variable">
arg-type</EM>
 [<EM CLASS="Variable">
arg-style</EM>
])</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1145878"></A>Arguments</H5>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145879"></A><EM CLASS="Variable">
name</EM>
</P>
<P CLASS="RDescription-C">A string naming the method to define.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145883"></A><EM CLASS="Variable">
result-type</EM>
</P>
<P CLASS="RDescription-C">An Objective-C FLI type.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145884"></A><EM CLASS="Variable">
result-style</EM>
</P>
<P CLASS="RDescription-C">An optional keyword specifying the result conversion style, either <CODE CLASS="Code">
:lisp </CODE>
or <CODE CLASS="Code">
:foreign</CODE>
.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145885"></A><EM CLASS="Variable">
object-var</EM>
</P>
<P CLASS="RDescription-C">A symbol naming a variable.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145886"></A><EM CLASS="Variable">
class-name</EM>
</P>
<P CLASS="RDescription-C">A symbol naming a class defined with <A HREF="objc-40.htm#90461" CLASS="XRef">define-objc-class</A>.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145887"></A><EM CLASS="Variable">
pointer-var</EM>
</P>
<P CLASS="RDescription-C">An optional symbol naming a variable.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145888"></A><EM CLASS="Variable">
arg-var</EM>
</P>
<P CLASS="RDescription-C">A symbol naming a variable.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145892"></A><EM CLASS="Variable">
arg-type</EM>
</P>
<P CLASS="RDescription-C">An Objective-C FLI type.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145893"></A><EM CLASS="Variable">
arg-style</EM>
</P>
<P CLASS="RDescription-C">An optional symbol or list specifying the argument conversion style.</P>
<P CLASS="RDescription-Item">
<A NAME="pgfId-1145894"></A><EM CLASS="Variable">
form</EM>
</P>
<P CLASS="RDescription-C">A form.</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1175381"></A>Description</H5>
<P CLASS="RBody">
<A NAME="pgfId-1175385"></A>The macro <CODE CLASS="Code">
define-objc-class-method</CODE>
 defines the Objective-C class method <EM CLASS="Variable">
name</EM>
 for the Objective-C classes associated with <EM CLASS="Variable">
class-name</EM>
. The <EM CLASS="Variable">
name</EM>
 should be a concatenation of the message name and its argument names, including the colons, for example <CODE CLASS="Code">
&quot;setWidth:height:&quot;</CODE>
.</P>
<P CLASS="RBody">
<A NAME="pgfId-1195512"></A>If the <A HREF="objc-40.htm#90461" CLASS="XRef">define-objc-class</A> definition of <EM CLASS="Variable">
class-name</EM>
 specifies the <CODE CLASS="Code">
(:objc-class-name </CODE>
<EM CLASS="Variable">
objc-class-name</EM>
<CODE CLASS="Code">
) </CODE>
option, then the method is added to the Objective-C class <EM CLASS="Variable">
objc-class-name</EM>
. Otherwise, the method is added to the Objective-C class of every subclass of <EM CLASS="Variable">
class-name</EM>
 that specifies the <CODE CLASS="Code">
:objc-class-name</CODE>
 option, allowing a mixin class to define methods that become part of the implementation of its subclasses (see <A HREF="objc-29.htm#38169" CLASS="XRef">Abstract classes</A>).</P>
<P CLASS="RBody">
<A NAME="pgfId-1146274"></A>When the method is invoked, each <EM CLASS="Variable">
form</EM>
 is evaluated in sequence with <EM CLASS="Variable">
object-var</EM>
 bound to the (sub)class of <EM CLASS="Variable">
class-name</EM>
, <EM CLASS="Variable">
pointer-var</EM>
 (if specified) bound to the receiver foreign pointer to the Objective-C class and each <EM CLASS="Variable">
arg-var</EM>
 bound to the corresponding method argument.</P>
<P CLASS="RBody">
<A NAME="pgfId-1146162"></A>See <A HREF="objc-42.htm#19291" CLASS="XRef">define-objc-method</A> for details of the argument and result conversion.</P>
<P CLASS="RBody">
<A NAME="pgfId-1146287"></A>The <EM CLASS="Variable">
form</EM>
s can use functions such as <A HREF="objc-47.htm#46194" CLASS="XRef">invoke</A> to invoke other class methods on the <EM CLASS="Variable">
pointer-var</EM>
. The macro <A HREF="objc-39.htm#24229" CLASS="XRef">current-super</A><CODE CLASS="Code">
 </CODE>
can be used to obtain an object that allows class methods in the superclass to be invoked (like <CODE CLASS="Code">
super</CODE>
 in Objective-C).</P>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1145984"></A>Example</H5>
</DIV>
<DIV>
<H5 CLASS="REntry-head">
<A NAME="pgfId-1145985"></A>See also</H5>
<P CLASS="RBody">
<A NAME="pgfId-1175436"></A><A HREF="objc-40.htm#90461" CLASS="XRef">define-objc-class</A><BR>
<A HREF="objc-42.htm#19291" CLASS="XRef">define-objc-method</A><BR>
<A HREF="objc-39.htm#24229" CLASS="XRef">current-super</A></P>
</DIV>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks Objective-C and Cocoa Interface User Guide and Reference Manual - 15 Dec 2011</I></P>
<P><A HREF="objc-42.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="objc-40.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="objc-33.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="objc.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="objc-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="objc-92.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
