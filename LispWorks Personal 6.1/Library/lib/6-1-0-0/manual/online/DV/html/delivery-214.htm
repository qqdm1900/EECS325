<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="delivery.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 9.1.2  Special dispatch functions and templates for them
</TITLE>

<LINK REL="next" HREF="delivery-215.htm" TYPE="text/html">
<LINK REL="prev" HREF="delivery-213.htm" TYPE="text/html">
<LINK REL="up" HREF="delivery-212.htm" TYPE="text/html">
<LINK REL="top" HREF="delivery.htm" TYPE="text/html">
<LINK REL="contents" HREF="delivery-2.htm" TYPE="text/html">
<LINK REL="index" HREF="delivery-294.htm" TYPE="text/html">
</HEAD>
<BODY BGCOLOR="#ffffff">
<DIV CLASS="HTMLBreadCrumbs"><A HREF="../../intro.htm">All Manuals</A> &gt; <A HREF="delivery.htm">LispWorks Delivery User Guide</A> &gt; <A HREF="delivery-211.htm">9 Delivery and Internal Systems</A> &gt; <A HREF="delivery-212.htm">9.1  Delivery and CLOS</A><BR><BR>
</DIV><A HREF="delivery-215.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="delivery-213.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="delivery-212.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="delivery.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="delivery-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="delivery-294.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
<H3 CLASS="FM2Heading">
<A NAME="pgfId-857553"></A>9.1.2  <A NAME="marker-861283"></A>Special dispatch functions and templates for them</H3>
<P CLASS="Body">
<A NAME="pgfId-858342"></A>The LispWorks CLOS implementation achieves fast method dispatch by producing special functions to perform discrimination and method dispatch. Since the required operation can often only be determined by seeing what arguments a generic function is called with, these functions can often end up being generated and compiled at runtime.</P>
<P CLASS="Body">
<A NAME="pgfId-858343"></A>If the compiler has been removed in a delivered application, then these special runtime-generated functions cannot be compiled on the fly.</P>
<P CLASS="Body">
<A NAME="pgfId-857556"></A>There are two ways in which the delivery system deals with this problem.</P>
<P CLASS="Body">
<A NAME="pgfId-857557"></A>The first is to have a set of pre-compiled &quot;template&quot; constructors which can construct an appropriate function. LispWorks comes with extensive set of such constructors, which should cover most of cases. The programmer can add her own, as explained below.</P>
<P CLASS="Body">
<A NAME="pgfId-857558"></A>The other mechanism is to construct generic closures to do the work. The code that generates the closures can cope with:</P>
<OL>
<LI CLASS="Step-1">
<A NAME="pgfId-857559"></A>A simple method combination, with the operator naming a function (or generic function) -- not a macro or special form.</LI>
<LI CLASS="Step">
<A NAME="pgfId-857560"></A>A more complicated method combination, constructing a form which should effectively be a tree of <CODE CLASS="Code">
progn</CODE>
 , <CODE CLASS="Code">
multiple-value-prog1</CODE>
 and <CODE CLASS="Code">
call-method </CODE>
forms.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-857561"></A>In most cases the effect on method dispatch time of using the generic technique is negligible. Pathological cases might, however, cause a slowdown of 10-20% over compiled special functions.  In this case, as well as for cases of user-defined complex method combinations which the generic mechanism cannot cope with, the delivered image must have precompiled &quot;template&quot; constructors, and if they are not already there the user needs to add them, as described next.</P>
<H4 CLASS="FM3HeadingTOC">
<A HREF="delivery-215.htm#pgfId-857563" CLASS="Hypertext">9.1.2.1  Finding the necessary templates</A></H4>
<H4 CLASS="FM3HeadingTOC">
<A HREF="delivery-216.htm#pgfId-857582" CLASS="Hypertext">9.1.2.2  Incorporating the templates into the application</A></H4>
<HR>
<P CLASS="Copyrighttext-small"><I CLASS="Italic">LispWorks Delivery User Guide - 13 Dec 2011</I></P>
<P><A HREF="delivery-215.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A><A HREF="delivery-213.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Prev BORDER=0></A><A HREF="delivery-212.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A><A HREF="delivery.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A><A HREF="delivery-2.htm"><IMG ALIGN=BOTTOM SRC=contents.gif ALT=Contents BORDER=0></A><A HREF="delivery-294.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A>
</BODY>
</HTML>
