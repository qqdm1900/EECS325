(defparameter *general-planning-kb*
  '(
    (plan-for ?goal ?goal nil)
    
    (<- (plan-for ?state1 ?goal (cons ?action ?actions))
        (action-for ?state1 ?goal ?action)
        (results ?state1 ?state2 ?action)
        (plan-for ?state2 ?goal ?actions))
    ))



(defparameter *shakey-1-kb*
  '(
    (results (v1-state ?bloc-1 ?bloc-1)
             (v1-state ?bloc-2 ?bloc-2)
             (push-box ?bloc-1 ?bloc-2))

    (results (v1-state ?sloc-1 ?bloc)
             (v1-state ?sloc-2 ?bloc)
             (move-to ?sloc-2))

    (<- (action-for (v1-state ?bloc ?bloc)
                    (v1-state ?sloc ?gloc)
                    (push-box ?bloc ?gloc))
        (different ?bloc ?gloc)
        (connect ?bloc ?gloc))

    (<- (action-for (v1-state ?bloc ?bloc)
                    (v1-state ?sloc ?gloc)
                    (push-box ?bloc hall))
        (different ?bloc ?gloc)
        (not (connect ?bloc ?gloc)))

    (<- (action-for (v1-state ?sloc ?bloc)
                    (v1-state ?sloc-2 ?gloc)
                    (move-to ?bloc))
        (different ?sloc ?bloc)
        (connect ?sloc ?bloc))

    (<- (action-for (v1-state ?sloc ?bloc)
                    (v1-state ?sloc-2 ?gloc)
                    (move-to hall))
        (different ?sloc ?bloc)
        (not (connect ?sloc ?bloc)))
    ))



(defparameter *room-kb*
  '( 

    (-> (all-different (cons ?l3 (cons ?l2 ?l1)))
        (all-different (cons ?l2 ?l1))
        (all-different (cons ?l3 ?l1))
        (different ?l3 ?l2))
    (-> (different ?x ?y) (different ?y ?x))

    (all-different (cons (room1 room2 room3 hall))


    (-> (connect ?x ?y) (connect ?y ?x))

    (connect room1 hall)
    (connect room2 hall)
    (connect room3 hall)
   ))